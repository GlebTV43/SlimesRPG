from aiogram import Bot, Dispatcher, types
import logging
from aiogram import Bot, types
from aiogram.utils import executor
import asyncio
from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton
import sqlite3
import random
import string
import os, sys

connection = sqlite3.connect('users.db')
cur = connection.cursor()

#flags
flag = 0
#buttons
button_reg = KeyboardButton('–ù–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç')
button_reg1 = KeyboardButton('–ü–æ–¥–≤—è–∑–∞—Ç—å')
reg_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True).add(button_reg).add(button_reg1)

button_rules = KeyboardButton('–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã ü§Ø')
button_settings = KeyboardButton('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öôÔ∏è')
button_play1 = KeyboardButton('–ò–≥—Ä–∞—Ç—å üéÆ')
sec_kb = ReplyKeyboardMarkup(resize_keyboard=True).add(button_play1).add(button_rules).add(button_settings)

button_change_name = KeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è üë¶üèº')
button_quest = KeyboardButton(text='–í–æ–ø—Ä–æ—Å—ã ‚ùì')
button_rules = KeyboardButton('–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã ü§Ø')
button_uni_key = KeyboardButton('–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á üîë')
button_new_uni_key = KeyboardButton('–ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á üîë')
button_VK = KeyboardButton('–ü–æ–¥–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç VK')
button_back = KeyboardButton('–ù–∞–∑–∞–¥ üîô')
settings_kb = ReplyKeyboardMarkup(resize_keyboard=True).add(button_change_name).add(button_quest, button_rules).add(button_uni_key, button_new_uni_key).add(button_VK).add(button_back)

button_LIKE = KeyboardButton('–ü—Ä–∏–Ω—è—Ç—å')
button_DISLIKE = KeyboardButton('–û—Ç–∫–ª–æ–Ω–∏—Ç—å')
VK_LIKE_kb = ReplyKeyboardMarkup(resize_keyboard=True).add(button_LIKE, button_DISLIKE).add(button_back)

button_q1 = KeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ –û—á–∫–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞ ‚ùì')
button_q2 = KeyboardButton(text='–ó–∞—á–µ–º –Ω—É–∂–Ω—ã —É–ª—É—á—à–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ ‚ùì')
questions_kb = ReplyKeyboardMarkup(resize_keyboard=True).add(button_q1).add(button_q2).add(button_back)

button_menu_attack = KeyboardButton('–ê—Ç–∞–∫–æ–≤–∞—Ç—å üí•')
button_rating = KeyboardButton('–†–µ–π—Ç–∏–Ω–≥ ‚≠ê')
button_settings2 = KeyboardButton('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ üîß')
button_fea = KeyboardButton('–°—Ç–∏—Ö–∏–∏ üå±')
button_shop = KeyboardButton('–ú–∞–≥–∞–∑–∏–Ω üõç')
button_statics = KeyboardButton('–ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ üåà')
menu_kb = ReplyKeyboardMarkup(resize_keyboard=True).add(button_menu_attack).add(button_fea, button_rating, button_settings2).add(button_shop, button_statics)

button_E = KeyboardButton('–§–∏–∑–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ ü¶æ')
button_C = KeyboardButton('–ö—Ä–∏–æ–≥–µ–Ω–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ üßä')
button_F = KeyboardButton('–û–≥–Ω–µ–Ω–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ üî•')
button_M = KeyboardButton('–ú–∞–≥–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ üîÆ')
button_back = KeyboardButton('–ù–∞–∑–∞–¥ üîô')
fea_kb = ReplyKeyboardMarkup(resize_keyboard=True).add(button_E).add(button_C).add(button_F).add(button_M).add(button_back)

button_shop_fea = KeyboardButton('–°—Ç–∏—Ö–∏–π–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è üå±')
button_shop_base = KeyboardButton('–ë–∞–∑–æ–≤—ã–µ —É–ª—É—á—à–µ–Ω–∏—è üõ°')

button_base_attack = KeyboardButton('–ë–∞–∑–æ–≤—ã–π —É—Ä–æ–Ω ‚öîÔ∏è')
button_base_shield = KeyboardButton('–ë–∞–∑–æ–≤–∞—è –∑–∞—â–∏—Ç–∞ üõ°')
button_base_maxhp = KeyboardButton('–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –ó–¥–æ—Ä–æ–≤—å–µ ‚õë')
button_base_criticaldamage = KeyboardButton('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω ‚ö°Ô∏è')
button_base_criticalchance = KeyboardButton('–®–∞–Ω—Å –Ω–∞ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É–¥–∞—Ä ü§ûüèª')
shop_base_kb = ReplyKeyboardMarkup(resize_keyboard=True).add(button_base_attack, button_base_shield).add(button_base_maxhp).add(button_base_criticaldamage, button_base_criticalchance).add(button_back)

button_attack_update = KeyboardButton('–ê—Ç–∞–∫–∞ ‚öîÔ∏è')
button_shield_update = KeyboardButton('–ó–∞—â–∏—Ç–∞ üõ°')
aors_kb = ReplyKeyboardMarkup(resize_keyboard=True).add(button_attack_update).add(button_shield_update).add(button_back)

b_E_attack = KeyboardButton('–§–∏–∑–∏—á–µ—Å–∫–∞—è –ê—Ç–∞–∫–∞ ü¶æ')
b_C_attack = KeyboardButton('–ö—Ä–∏–æ–≥–µ–Ω–Ω–∞—è –ê—Ç–∞–∫–∞ üßä')
b_F_attack = KeyboardButton('–û–≥–Ω–µ–Ω–Ω–∞—è –ê—Ç–∞–∫–∞ üî•')
b_M_attack = KeyboardButton('–ú–∞–≥–∏—á–µ—Å–∫–∞—è –ê—Ç–∞–∫–∞ üîÆ')
fight_kb = ReplyKeyboardMarkup(resize_keyboard=True).add(b_E_attack, b_C_attack).add(b_F_attack, b_M_attack)

TOKEN = '5968724782:AAESvBSx_lOPxf1Wn-reEOZj0lRabNtilr0'

bot = Bot(token=TOKEN)
dp = Dispatcher(bot=bot)

logging.basicConfig(format=u'%(filename)s [ LINE:%(lineno)+3s ]#%(levelname)+8s [%(asctime)s]  %(message)s',
                    level=logging.INFO)


#—Ñ–æ—Ä–º—É–ª—ã
def exp_to_level(exp, fl=False):
    b1 = 100
    q = 1.25
    tmp = 0
    ans = 0
    for x in range(1000):
        tmp += b1 * q ** x
        if tmp >= exp:
            ans = x
            break
    else:
        return int(1e9)
    if fl:
        return ans, int(tmp - exp)
    return ans


def money_coef(exp):
    level = exp_to_level(exp)
    ans = 0
    for x in range(level):
        ans += int(8 * x ** 2.5 + 100)
    return ans


def id_generator(size=6, chars=string.ascii_uppercase + string.digits + string.ascii_lowercase):
    return ''.join(random.choice(chars) for _ in range(size))


#—Ü–µ–Ω–∞ –ª–µ—á–µ–Ω–∏—è
#data = cur.execute(
        #f"""SELECT Experience, Money, Health_Points, Max_Health_Points
                                                 #FROM Users WHERE VK_ID = {user_id}""").fetchall()[0]
#cost = int(money_coef(data[0]) * 0.03 * min(4, (data[3] / data[2])))
#if data[3] / data[2] == 1:
    #cost = 0


@dp.message_handler(commands=['start'])
async def start_handler(message: types.Message):
    user_id = message.from_user.id
    if not cur.execute(f'SELECT * FROM Users WHERE TG_ID = {user_id}').fetchall():
        username = message.from_user.first_name
        await message.reply(f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ {username}, –≤—ã –ø–æ–ø–∞–ª–∏ –∏–≥—Ä—É —á–∞—Ç-–±–æ—Ç Slimes RPG. \n'
                            f'–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, —Ç–æ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è!', reply_markup=reg_kb)
    else:
        username = message.from_user.first_name
        await message.reply(f'{username}, –≤—ã —É–∂–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! üò°')


@dp.message_handler(content_types=['text'])
async def bot_mes(message: types.Message):
    user_id = message.from_user.id
    username = message.from_user.first_name
    if message.chat.type == 'private':
        if not cur.execute(f"SELECT Status FROM Users WHERE TG_ID = {user_id}").fetchall():
            # print(cur.execute(f"SELECT Status FROM Users WHERE TG_ID = {user_id}").fetchall()[0][0])
            cur.execute(
                f"INSERT INTO Users (User_Name, Status, TG_ID) VALUES ('{username}', -2, {user_id})")
            connection.commit()
        if message.text == '–ù–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç':
            user_id = message.from_user.id
            username = message.from_user.first_name
            # cur.execute(f"INSERT INTO Users (User_Name, TG_ID, status) VALUES ('{username}', {user_id}, {1})")
            while True:
                lenth = 100
                tmp = cur.execute(f"SELECT User_ID FROM Users WHERE TG_ID = {user_id}").fetchall()[0][
                    0]
                unique_id = str(user_id) + str(tmp) + id_generator(lenth - len(str(user_id) + str(tmp)))
                if cur.execute(f"SELECT * FROM Users WHERE Unique_ID = '{unique_id}'").fetchall():
                    continue
                cur.execute(f"UPDATE Users SET Unique_ID = '{unique_id}' WHERE TG_ID = {user_id}")
                connection.commit()
                break
            cur.execute(f"UPDATE Users SET Status = 1 WHERE TG_ID = {user_id}")
            cur.execute(f"UPDATE Users SET Unique_ID = '{unique_id}' WHERE TG_ID = {user_id}")
            connection.commit()
            await bot.send_message(message.chat.id, '–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å!', reply_markup=sec_kb)
        elif message.text == '–ü–æ–¥–≤—è–∑–∞—Ç—å':
            await bot.send_message(message.chat.id,
                                     f"–í–∞—à ID –≤ TG: {user_id}")
            if not cur.execute(f'SELECT * FROM Users WHERE TG_ID = {user_id}').fetchall():
                cur.execute(
                    f"INSERT INTO Users (Status, TG_ID) VALUES (-2, {user_id})")
            connection.commit()
            await bot.send_message(message.chat.id,
                                   f"–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞:")
        elif cur.execute(f"SELECT Status FROM Users WHERE TG_ID = {user_id}").fetchall()[0][0] == -2:
            cur.execute(f"UPDATE Users SET TG_ID_REG = {user_id} WHERE Unique_ID = '{message.text}'")
            connection.commit()
            await bot.send_message(message.chat.id, "–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø—Ä–∏–≤—è–∑–∫—É –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞ VK")
            cur.execute(f"UPDATE Users SET Status = -2 WHERE TG_ID = {user_id}")
            connection.commit()
        elif message.text == '–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã ü§Ø':
            user_id = message.from_user.id
            cur.execute(f'''UPDATE Users SET status = {11} WHERE TG_ID = {user_id}''')
            connection.commit()
            await bot.send_message(message.chat.id, f'*–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã:*\n'
f'_–í–∞—Å –∞—Ç–∞–∫—É—é—Ç –º–æ–Ω—Å—Ç—Ä—ã, –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ, —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å, —ç—Ç–æ —Å–º–∏—Ä–∏—Ç—å—Å—è –∏ –ø—Ä–∏—Å–ø–æ—Å–æ–±–∏—Ç—å—Å—è –∫ —ç—Ç–æ–º—É, —É–ª—É—á—à–∞—è —Å–≤–æ–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏. –ó–∞ –∫–∞–∂–¥–æ–≥–æ –≤—ã–∏–≥—Ä—ã–Ω–æ–≥–æ —Å–ª–∞–π–º–∞ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ —Ä–µ–π—Ç–∏–Ω–≥. –°–æ—Ä–µ–≤–Ω—É–π—Ç–µ—Å—å —Å –¥—Ä—É–∑—å—è–º–∏, –ø—Ä–æ–≤–µ—Ä—è—è —Å–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥ –Ω–∞ —Å–∞–π—Ç–µ –∏–≥—Ä—ã._', parse_mode='Markdown')
        elif message.text == '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öôÔ∏è':
            user_id = message.from_user.id
            print('–ù–∞—Å—Ç—Ä–æ–π–∫–∏')
            cur.execute(f'''UPDATE Users SET status = {14} WHERE TG_ID = {user_id}''')
            connection.commit()
            await bot.send_message(message.chat.id, '–ù–∞—Å—Ç—Ä–æ–π–∫–∏.',
                                   reply_markup=settings_kb)
        elif message.text == '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ üîß':
            user_id = message.from_user.id
            print('–ù–∞—Å—Ç—Ä–æ–π–∫–∏2')
            cur.execute(f'''UPDATE Users SET status = {14} WHERE TG_ID = {user_id}''')
            connection.commit()
            await bot.send_message(message.chat.id, '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
                                   reply_markup=settings_kb)
        elif message.text == '–ü–æ–¥–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç VK':
            vk_id_reg = cur.execute(f"SELECT VK_ID_REG FROM Users WHERE "
                                         f"TG_ID = {user_id}").fetchall()[0][0]
            if vk_id_reg is not None:
                await bot.send_message(message.chat.id,
                f"–ê–∫–∫–∞—É–Ω—Ç VK —Å ID {vk_id_reg} —Ö–æ—á–µ—Ç –ø–æ–¥–≤—è–∑–∞—Ç—å—Å—è –∫ –≤–∞—à–µ–º—É "
                                         f"–ø—Ä–æ—Ñ–∏–ª—é.\n"
                                         f"–°—Ä–∞–≤–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–π ID —Å ID –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ Telegram. "
                                         f"(–ï–≥–æ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Ç–∞–∫–∂–µ —á–µ—Ä–µ–∑ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –≤ Telegram)\n"
                                         f"–ï—Å–ª–∏ –≤—ã —ç—Ç–æ–≥–æ –Ω–µ –¥–µ–ª–∞–ª–∏ –∏–ª–∏ ID –Ω–µ —Å–æ–≤–ø–∞–ª–∏, "
                                         f"—Ç–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å "
                                         f"–∏ –ø–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞' –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö", reply_markup=VK_LIKE_kb)
                cur.execute(
                    f"UPDATE Users SET Status = 3114 WHERE TG_ID = {user_id}")
                connection.commit()
            else:
                await bot.send_message(message.chat.id, f"–ù–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –≤—Ö–æ–¥—è—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤")
        elif message.text == '–ü—Ä–∏–Ω—è—Ç—å':
            vk_id_reg = cur.execute(f"SELECT VK_ID_REG FROM Users WHERE "
                                    f"TG_ID = {user_id}").fetchall()[0][0]
            cur.execute(f"DELETE FROM Users WHERE VK_ID = '{vk_id_reg}'")
            cur.execute(
                f"UPDATE Users SET VK_ID = '{vk_id_reg}' WHERE TG_ID = {user_id}")
            cur.execute(
                f"UPDATE Users SET VK_ID_REG = NULL WHERE TG_ID = {user_id}")
            cur.execute(
                f"UPDATE Users SET Status = 14 WHERE TG_ID = {user_id}")
            connection.commit()
            await bot.send_message(message.chat.id, f"Telegram –∞–∫–∫–∞—É–Ω—Ç —Å ID {user_id} –∏ VK –∞–∫–∫–∞—É–Ω—Ç —Å ID {vk_id_reg} "
                                     f"—Ç–µ–ø–µ—Ä—å –æ–±—ä–µ–¥–∏–Ω–µ–Ω—ã", reply_markup=settings_kb)
        elif message == '–û—Ç–∫–ª–æ–Ω–∏—Ç—å':
            cur.execute(
                f"UPDATE Users SET VK_ID_REG = NULL WHERE TG_ID = {user_id}")
            cur.execute(
                f"UPDATE Users SET Status = 14 WHERE TG_ID = {user_id}")
            connection.commit()
            await bot.send_message(message.chat.id, f"–ó–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ Telegram –∞–∫–∫–∞—É–Ω—Ç–∞ –±—ã–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω", reply_markup=settings_kb)
        elif message.text == '–í–æ–ø—Ä–æ—Å—ã ‚ùì':
            user_id = message.from_user.id
            cur.execute(f'''UPDATE Users SET status = {141} WHERE TG_ID = {user_id}''')
            connection.commit()
            await bot.send_message(message.chat.id, '–í–æ–ø—Ä–æ—Å—ã',
                                   reply_markup=questions_kb)
        elif message.text == '–ß—Ç–æ —Ç–∞–∫–æ–µ –û—á–∫–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞ ‚ùì':
            user_id = message.from_user.id
            await bot.send_message(message.chat.id, f'*–ß—Ç–æ —Ç–∞–∫–æ–µ –û—á–∫–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞ ‚ùì*\n'
                                   f'_–° –ø–æ–º–æ—â—å—é –û—á–∫–æ–≤ —Ä–µ–π—Ç–∏–Ω–≥–∞, –ø–æ–ª—É—á–∞–µ–º–æ–≥–æ –ø—Ä–∏ –ø–æ–±–µ–¥–µ –≤ –±–æ—é, –≤—ã –ø–æ–≤—ã—à–∞–µ—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ –≤ –æ–±—â–µ–º —Ä–µ–π—Ç–∏–Ω–≥–µ –∏–≥—Ä–æ–∫–æ–≤.\n–û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥: http://185.185.71.200:8080_', parse_mode='Markdown')
        elif message.text == '–ó–∞—á–µ–º –Ω—É–∂–Ω—ã —É–ª—É—á—à–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ ‚ùì':
            user_id = message.from_user.id
            await bot.send_message(message.chat.id, f'*–ó–∞—á–µ–º –Ω—É–∂–Ω—ã —É–ª—É—á—à–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ ‚ùì*\n'
                                                    f'_–£–ª—É—á—à–∞—è —Å–≤–æ–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏, –≤—ã –æ–±–ª–µ–≥—á–∞–µ—Ç–µ —Å–µ–±–µ –ø—Ä–æ—Ü–µ—Å—Å –±–æ—è. –ù–∞–ø—Ä–∏–º–µ—Ä, —É–≤–µ–ª–∏—á–∏–≤ —Å–≤–æ—é –ë–∞–∑–æ–≤—É—é –∞—Ç–∞–∫—É, –≤—ã –±—É–¥–µ—Ç–µ –Ω–∞–Ω–æ—Å–∏—Ç—å –±–æ–ª—å—à–∏–π —É—Ä–æ–Ω —Å–≤–æ–µ–º—É –≤—Ä–∞–≥—É, –∞ –µ—Å–ª–∏ –∑–∞—â–∏—Ç—É, —Ç–æ —É—Ä–æ–Ω –ø–æ–ª—É—á–∞–µ–º—ã–π –≤–∞–º–∏ –±—É–¥–µ—Ç –º–µ–Ω—å—à–µ. –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ —Å–æ —Å—Ç–∏—Ö–∏–π–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—è–º–∏, —É–ª—É—á—à–∞—è –§–∏–∑–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏, –≤—ã –±—É–¥–µ—Ç–µ –ª—É—á—à–µ –∞—Ç–∞–∫–æ–≤–∞—Ç—å –∏–ª–∏ –∑–∞—â–∏—â–∞—Ç—å—Å—è –æ—Ç –§–∏–∑–∏—á–µ—Å–∫–æ–≥–æ —Ç–∏–ø–∞ —Å–ª–∞–π–º–æ–≤._',
                                   parse_mode='Markdown')
        elif message.text == '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á üîë':
            code = cur.execute(f"SELECT Unique_ID FROM Users WHERE TG_ID = {user_id}").fetchall()[0][
                0]
            await bot.send_message(message.chat.id, f'*–í–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞:*\n'
                                                    f'{code}', parse_mode='Markdown')
        elif message.text == '–ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á üîë':
            while True:
                lenth = 100
                tmp = cur.execute(f"SELECT User_ID FROM Users WHERE TG_ID = {user_id}").fetchall()[0][
                    0]
                unique_id = str(user_id) + str(tmp) + id_generator(lenth - len(str(user_id) + str(tmp)))
                if cur.execute(f"SELECT * FROM Users WHERE Unique_ID = '{unique_id}'").fetchall():
                    continue
                cur.execute(f"UPDATE Users SET Unique_ID = '{unique_id}' WHERE TG_ID = {user_id}")
                connection.commit()
                break
            await bot.send_message(message.chat.id, f'*–í–∞—à –Ω–æ–≤—ã–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞:*\n'
                                                    f'{unique_id}', parse_mode='Markdown')
        elif message.text == '–ü–æ–¥–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç VK':
            code = cur.execute(f"SELECT Unique_ID FROM Users WHERE TG_ID = {user_id}").fetchall()[0][
                0]
            await bot.send_message(message.chat.id, f'–í–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞:\n'
                                                    f'{code}', parse_mode='Markdown')
        elif message.text == '–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è üë¶üèº':
            user_id = message.from_user.id
            print('–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è')
            cur.execute(f'''UPDATE Users SET status = {214} WHERE TG_ID = {user_id}''')
            connection.commit()
            username = message.from_user.first_name
            await bot.send_message(message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è.\n'
                                                    f'–°—Ç–∞—Ä–æ–µ –∏–º—è: {username}')
            await bot.send_message(message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "$$#–∏–º—è#"')
        elif message.text.startswith('$$'):
            user_id = message.from_user.id
            cur.execute(f'''UPDATE Users SET User_Name = '{message.text.strip('$$')}' WHERE TG_ID = {user_id}''')
            connection.commit()
            print(f'–∏–º—è –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ {message.text.strip("$$")}')
            nn = cur.execute(f'''SELECT User_Name FROM Users WHERE TG_ID = {user_id}''').fetchall()[0]
            connection.commit()
            await bot.send_message(message.chat.id, f'–û—Ç–ª–∏—á–Ω–æ! \n'
                                                    f'–¢–µ–ø–µ—Ä—å –≤—ã: {nn[0]}')

        elif message.text == '–ù–∞–∑–∞–¥ üîô':
            status = cur.execute(f'''SELECT status FROM Users WHERE TG_ID = {user_id}''').fetchall()[0][0]
            print(status)
            if status == 11:
                await bot.send_message(message.chat.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å.', reply_markup=menu_kb)
                cur.execute(f'''UPDATE Users SET status = {1} WHERE TG_ID = {user_id}''')
                connection.commit()
            if status == 14:
                await bot.send_message(message.chat.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å.', reply_markup=menu_kb)
                cur.execute(f'''UPDATE Users SET status = {1} WHERE TG_ID = {user_id}''')
                connection.commit()
            if status == 141:
                await bot.send_message(message.chat.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å.', reply_markup=settings_kb)
                cur.execute(f'''UPDATE Users SET status = {14} WHERE TG_ID = {user_id}''')
                connection.commit()
            elif status == 214:
                await bot.send_message(message.chat.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å.', reply_markup=menu_kb)
                cur.execute(f'''UPDATE Users SET status = {1} WHERE TG_ID = {user_id}''')
                connection.commit()
            elif status == 1:
                await bot.send_message(message.chat.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å.', reply_markup=menu_kb)
                cur.execute(f'''UPDATE Users SET status = {1} WHERE TG_ID = {user_id}''')
                connection.commit()
            elif status == 12:
                await bot.send_message(message.chat.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å.', reply_markup=menu_kb)
                cur.execute(f'''UPDATE Users SET status = {1} WHERE TG_ID = {user_id}''')
                connection.commit()
            elif status == 15:
                await bot.send_message(message.chat.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å.', reply_markup=menu_kb)
                cur.execute(f'''UPDATE Users SET status = {1} WHERE TG_ID = {user_id}''')
                connection.commit()
            elif status in [105, 205]:
                cur.execute(f'''UPDATE Users SET status = {15} WHERE TG_ID = {user_id}''')
                connection.commit()
                money = cur.execute(f'''SELECT Money FROM Users WHERE TG_ID = {user_id}''').fetchall()[0][0]
                user_id = message.from_user.id
                data = cur.execute(
                    f"""SELECT Experience, Money, Health_Points, Max_Health_Points
                                                         FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                    0]
                cost = int(money_coef(data[0]) * 0.03 * min(4, (data[3] / data[2])))
                if data[3] / data[2] == 1:
                    cost = 0
                button_heal = KeyboardButton(f'–õ–µ—á–µ–Ω–∏–µ ‚õë ({cost} üí∏)')
                shop_kb = ReplyKeyboardMarkup(resize_keyboard=True).add(button_shop_fea, button_shop_base).add(
                    button_heal).add(button_back)
                await bot.send_message(message.chat.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å.', reply_markup=shop_kb)
            elif status in [2051, 2052, 2053, 2054]:
                await bot.send_message(message.chat.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å.\n'
                                                        '–í—ã–±–µ—Ä–µ—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–ª—É—á—à–∏—Ç—å:', reply_markup=fea_kb)
                cur.execute(f'''UPDATE Users SET status = {205} WHERE TG_ID = {user_id}''')
                connection.commit()
        elif message.text == '–ò–≥—Ä–∞—Ç—å üéÆ':
            user_id = message.from_user.id
            cur.execute(f'''UPDATE Users SET status = {1} WHERE TG_ID = {user_id}''')
            connection.commit()
            await bot.send_message(message.chat.id, '–í—ã –≤ –∏–≥—Ä–µ! üïπ', reply_markup=menu_kb)
        elif message.text == '–ê—Ç–∞–∫–æ–≤–∞—Ç—å üí•':
            user_id = message.from_user.id
            cur.execute(f'''UPDATE Users SET status = {60} WHERE TG_ID = {user_id}''')
            connection.commit()
            data = cur.execute(
                f"""SELECT User_Name, Rating, Experience, 
                                                Money, Health_Points, Max_Health_Points, 
                                                Base_Attack, Base_Shield, Critical_Attack, Critical_Chance, 
                                                E_Shield, C_Shield, F_Shield, M_Shield, E_Attack, 
                                                C_Attack, F_Attack, M_Attack FROM Users 
                                                WHERE TG_ID = {user_id}""").fetchall()[0]
            level = exp_to_level(data[2])
            base = cur.execute(f"""SELECT * FROM Slimes WHERE Enemy_Level <= {level}""").fetchall()
            enemy = random.choice(base)
            cur.execute(f"""UPDATE Users SET Current_Enemy_ID = {enemy[0]} WHERE TG_ID = {user_id}""")
            cur.execute(
                f"""UPDATE Users SET Current_Enemy_HP = {max(enemy[3], int(enemy[3] * 0.01 ** (0.5 * level)))} WHERE TG_ID = {user_id}""")
            cur.execute(
                f"""UPDATE Users SET Current_Enemy_Max_HP = {max(enemy[3], int(enemy[3] * 0.01 ** (0.5 * level)))} WHERE TG_ID = {user_id}""")
            cur.execute(
                f"""UPDATE Users SET Current_Enemy_Attack = {max(enemy[4], enemy[4] * 0.01 ** (0.5 * level))} WHERE TG_ID = {user_id}""")
            connection.commit()
            await bot.send_message(message.chat.id, f'–û–±–Ω–∞—Ä—É–∂–µ–Ω –≤—Ä–∞–≥: {enemy[1]}\n'
                                                f'_–ó–¥–æ—Ä–æ–≤—å–µ_: {max(enemy[3], int(enemy[3] * 0.01 ** (0.5 * level)))} ‚ù§Ô∏è/ {max(enemy[3], int(enemy[3] * 0.01 ** (0.5 * level)))} ‚ù§Ô∏è\n'
                                                f'_–ë–∞–∑–æ–≤—ã–π —É—Ä–æ–Ω_: {max(enemy[4], enemy[4] * 0.01 ** (0.5 * level)):.2f} ‚öîÔ∏è', reply_markup=fight_kb, parse_mode='Markdown')
        elif message.text == '–§–∏–∑–∏—á–µ—Å–∫–∞—è –ê—Ç–∞–∫–∞ ü¶æ':
            cur.execute(f"""UPDATE Users SET Money = Money + 3 WHERE TG_ID = {user_id}""")
            connection.commit()
            await bot.send_message(message.chat.id, f'–í—ã –ø–æ–ª—É—á–∏–ª–∏ 3 –º–æ–Ω–µ—Ç—ã üí∏')
            data = cur.execute(
                f"""SELECT User_Name, Rating, Experience, 
                                                                                        Money, Health_Points, Max_Health_Points, 
                                                                                        Base_Attack, Base_Shield, Critical_Attack, Critical_Chance, 
                                                                                        E_Shield, C_Shield, F_Shield, M_Shield, E_Attack, 
                                                                                        C_Attack, F_Attack, M_Attack FROM Users 
                                                                                        WHERE TG_ID = {user_id}""").fetchall()[
                0]
            level = exp_to_level(data[2])
            chance = random.randint(1, 1000)
            critical_chance = cur.execute(
                f"""SELECT Critical_Chance FROM Users WHERE TG_ID = {user_id}""").fetchall()[0][
                0]
            critical_attack = cur.execute(
                f"""SELECT Critical_Attack FROM Users WHERE TG_ID = {user_id}""").fetchall()[0][
                0]
            attack = cur.execute(
                f"""SELECT Base_Attack FROM Users WHERE TG_ID = {user_id}""").fetchall()[0][
                0]
            adv_attack = cur.execute(
                f"""SELECT E_Attack FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                0][0]
            if chance <= critical_chance * 1000:
                attack = critical_attack + attack
                adv_attack = critical_attack + attack
                await bot.send_message(message.chat.id, f'–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –ê—Ç–∞–∫–∞ ‚ö°Ô∏è')
            enemy_id = cur.execute(
                f"""SELECT Current_Enemy_ID FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                0][0]
            enemy = cur.execute(f"""SELECT * FROM Slimes WHERE Enemy_ID = {enemy_id}""").fetchall()[0]
            enemy_hp = cur.execute(
                f"""SELECT Current_Enemy_HP FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                0][0]
            if enemy[2] == 'E':
                all_damage = int((attack ** 2 + adv_attack ** 2) ** 0.5)
                enemy_hp -= all_damage
                cur.execute(f"""UPDATE Users SET Current_Enemy_HP = {enemy_hp}""")
                connection.commit()
                await bot.send_message(message.chat.id, f'_–í–∞—à–∞ –∞—Ç–∞–∫–∞ –Ω–∞–Ω–µ—Å–ª–∞_: *{all_damage:.2f} ‚ù§Ô∏è*Ô∏è', parse_mode='Markdown')
            else:
                all_damage = int(attack * 0.85)
                enemy_hp -= all_damage
                cur.execute(f"""UPDATE Users SET Current_Enemy_HP = {enemy_hp}""")
                connection.commit()
                await bot.send_message(message.chat.id, f'_–í–∞—à–∞ –∞—Ç–∞–∫–∞ –Ω–∞–Ω–µ—Å–ª–∞_: *{all_damage:.2f} ‚ù§Ô∏è*Ô∏è', parse_mode='Markdown')
            if enemy_hp < 1:
                enemy_exp = enemy[7]
                enemy_money = enemy[6]
                enemy_rating = enemy[8]
                print(enemy_exp, enemy_money, enemy_rating)
                await bot.send_message(message.chat.id,
                                       f"*–í—ã –ø–æ–±–µ–¥–∏–ª–∏!*\n\n*–í–∞—à–∞ –Ω–∞–≥—Ä–∞–¥–∞*:\n"
                                       f"_–ú–æ–Ω–µ—Ç—ã_: *{int(enemy_money * (level + 1) ** 1.5):,} üí∏*\n"
                                       f"_–û–ø—ã—Ç_: *{int(enemy_exp * (level + 1) ** 1.5):,} ‚≠êÔ∏è*\n"
                                       f"_–û—á–∫–∏ –†–µ–π—Ç–∏–Ω–≥–∞_: *{enemy_rating:,} üèÜ*\n"
                                       f"_–ó–¥–æ—Ä–æ–≤—å–µ_: *{int(data[4])} ‚ù§/ {int(data[5])} ‚ù§ Ô∏è*", reply_markup=menu_kb,
                                       parse_mode='Markdown')
                cur.execute(f"""UPDATE Users SET Experience 
                = {data[2] + int(enemy_exp * (level + 1) ** 1.5)}, 
                Rating = {data[1] + enemy_rating}, Money = {data[3] + int(enemy_money * (level + 1) ** 1.5)} 
                WHERE  TG_ID = {user_id}""")
                cur.execute(f"""UPDATE Users SET Status = 1 WHERE TG_ID = {user_id}""")
                connection.commit()
            else:
                data = cur.execute(
                    f"""SELECT User_Name, Rating, Experience, 
                                                Money, Health_Points, Max_Health_Points, 
                                                Base_Attack, Base_Shield, Critical_Attack, Critical_Chance, 
                                                E_Shield, C_Shield, F_Shield, M_Shield, E_Attack, 
                                                C_Attack, F_Attack, M_Attack FROM Users 
                                                WHERE TG_ID = {user_id}""").fetchall()[
                    0]
                enemy_id = cur.execute(
                    f"""SELECT Current_Enemy_ID FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                    0][0]
                enemy = cur.execute(f"""SELECT * FROM Slimes WHERE Enemy_ID = {enemy_id}""").fetchall()[0]
                enemy_hp = cur.execute(
                    f"""SELECT Current_Enemy_HP FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                    0][0]
                enemy_hp_max = cur.execute(
                    f"""SELECT Current_Enemy_Max_HP FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                    0][0]
                enemy_attack = cur.execute(
                    f"""SELECT Current_Enemy_Attack FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                    0][0]
                await bot.send_message(message.chat.id, f'–í–ê–° –ê–¢–ê–ö–£–ï–¢ *{enemy[1]}*\n\n'
                                                        f'_–ó–¥–æ—Ä–æ–≤—å–µ_: *{enemy_hp} ‚ù§Ô∏è/ {enemy_hp_max} ‚ù§Ô∏è*\n'
                                                        f'_–ë–∞–∑–æ–≤—ã–π —É—Ä–æ–Ω_: *{enemy_attack:.2f}*\n',
                                       parse_mode='Markdown')
                hp = data[4]
                chance = random.randint(1, 100)
                if chance <= 10:
                    await bot.send_message(message.chat.id, f'–§–£–•, –≤—Ä–∞–≥ *–ø—Ä–æ–º–∞—Ö–Ω—É–ª—Å—è*', parse_mode='Markdown')
                elif chance >= 90 and enemy_hp != enemy_hp_max:
                    await bot.send_message(message.chat.id, f'–í—Ä–∞–≥ *–ø–æ–¥–ª–µ—á–∏–ª—Å—è* ‚õë', parse_mode='Markdown')
                    cur.execute(f"""UPDATE Users SET Current_Enemy_HP = {enemy_hp} WHERE TG_ID = {user_id}""")
                    connection.commit()
                else:
                    shield = \
                        cur.execute(
                            f"""SELECT {enemy[2]}_Shield FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                            0][0]
                    shield_all = cur.execute(
                        f"""SELECT Base_Shield FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                        0][0]
                    hp = hp + min(-int(enemy_attack * 0.1), -enemy_attack + shield + shield_all)
                    await bot.send_message(message.chat.id,
                                           f'_–í—Ä–∞–≥ –Ω–∞–Ω–µ—Å –≤–∞–º —É—Ä–æ–Ω_: *{-min(int(enemy_attack * 0.1), -enemy_attack + shield + shield_all):.2f} ‚ù§*\n'
                                           f'_–í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ_: *{max(0, hp)} ‚ù§Ô∏è/ {data[5]} ‚ù§Ô∏è*', parse_mode='Markdown')
                    if hp < 1:
                        cur.execute(
                            f"""UPDATE Users SET Health_Points = {int(data[5])} WHERE TG_ID = {user_id}""")
                        cur.execute(
                            f"""UPDATE Users SET Experience = {int(data[2] * 0.9)} WHERE TG_ID = {user_id}""")
                        cur.execute(
                            f"""UPDATE Users SET Rating = {max(0, data[1] - enemy[8] * 30)} WHERE TG_ID = {user_id}""")
                        connection.commit()
                        await bot.send_message(message.chat.id, f'*–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏* ‚ò†Ô∏è\n\n'
                                                                f'–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏:\n'
                                                                f'_–û–ø—ã—Ç_: *{data[2] - int(data[2] * 0.9)}* ‚≠êÔ∏è\n'
                                                                f'_–û—á–∫–∏ –†–µ–π—Ç–∏–Ω–≥–∞_: *{data[1] - max(0, data[1] - enemy[8] * 30)}* üèÜ\n'
                                                                f'\n'
                                                                f'_–í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–Ω–æ_', reply_markup=menu_kb,
                                               parse_mode='Markdown')

                        cur.execute(f"""UPDATE Users SET Status = 1 WHERE TG_ID = {user_id}""")
                        connection.commit()
                    else:
                        cur.execute(f"""UPDATE Users SET Health_Points = {int(hp)} WHERE TG_ID = {user_id}""")
                        enemy_id = cur.execute(
                            f"""SELECT Current_Enemy_ID FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                            0][0]
                        enemy = cur.execute(f"""SELECT * FROM Slimes WHERE Enemy_ID = {enemy_id}""").fetchall()[0]
                        enemy_hp = cur.execute(
                            f"""SELECT Current_Enemy_HP FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                            0][0]
                        enemy_hp_max = cur.execute(
                            f"""SELECT Current_Enemy_Max_HP FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                            0][0]
                        enemy_attack = cur.execute(
                            f"""SELECT Current_Enemy_Attack FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                            0][0]
                        connection.commit()
                        #–≤–∞—Å –∞—Ç–∞–∫—É–µ—Ç
        elif message.text == '–ö—Ä–∏–æ–≥–µ–Ω–Ω–∞—è –ê—Ç–∞–∫–∞ üßä':
            cur.execute(f"""UPDATE Users SET Money = Money + 3 WHERE TG_ID = {user_id}""")
            connection.commit()
            await bot.send_message(message.chat.id, f'–í—ã –ø–æ–ª—É—á–∏–ª–∏ 3 –º–æ–Ω–µ—Ç—ã üí∏')
            data = cur.execute(
                f"""SELECT User_Name, Rating, Experience, 
                                                                                                    Money, Health_Points, Max_Health_Points, 
                                                                                                    Base_Attack, Base_Shield, Critical_Attack, Critical_Chance, 
                                                                                                    E_Shield, C_Shield, F_Shield, M_Shield, E_Attack, 
                                                                                                    C_Attack, F_Attack, M_Attack FROM Users 
                                                                                                    WHERE TG_ID = {user_id}""").fetchall()[
                0]
            level = exp_to_level(data[2])
            chance = random.randint(1, 1000)
            critical_chance = cur.execute(
                f"""SELECT Critical_Chance FROM Users WHERE TG_ID = {user_id}""").fetchall()[0][
                0]
            critical_attack = cur.execute(
                f"""SELECT Critical_Attack FROM Users WHERE TG_ID = {user_id}""").fetchall()[0][
                0]
            attack = cur.execute(
                f"""SELECT Base_Attack FROM Users WHERE TG_ID = {user_id}""").fetchall()[0][
                0]
            adv_attack = cur.execute(
                f"""SELECT C_Attack FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                0][0]
            if chance <= critical_chance * 1000:
                attack = critical_attack + attack
                adv_attack = critical_attack + attack
                await bot.send_message(message.chat.id, f'–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –ê—Ç–∞–∫–∞ ‚ö°Ô∏è')
            enemy_id = cur.execute(
                f"""SELECT Current_Enemy_ID FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                0][0]
            enemy = cur.execute(f"""SELECT * FROM Slimes WHERE Enemy_ID = {enemy_id}""").fetchall()[0]
            enemy_hp = cur.execute(
                f"""SELECT Current_Enemy_HP FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                0][0]
            if enemy[2] == 'C':
                all_damage = int((attack ** 2 + adv_attack ** 2) ** 0.5)
                enemy_hp -= all_damage
                cur.execute(f"""UPDATE Users SET Current_Enemy_HP = {enemy_hp}""")
                connection.commit()
                await bot.send_message(message.chat.id, f'_–í–∞—à–∞ –∞—Ç–∞–∫–∞ –Ω–∞–Ω–µ—Å–ª–∞_: *{all_damage:.2f} ‚ù§Ô∏è*Ô∏è', parse_mode='Markdown')
            else:
                all_damage = int(attack * 0.85)
                enemy_hp -= all_damage
                cur.execute(f"""UPDATE Users SET Current_Enemy_HP = {enemy_hp}""")
                connection.commit()
                await bot.send_message(message.chat.id, f'_–í–∞—à–∞ –∞—Ç–∞–∫–∞ –Ω–∞–Ω–µ—Å–ª–∞_: *{all_damage:.2f} ‚ù§Ô∏è*Ô∏è', parse_mode='Markdown')
            if enemy_hp < 1:
                enemy_exp = enemy[7]
                enemy_money = enemy[6]
                enemy_rating = enemy[8]
                print(enemy_exp, enemy_money, enemy_rating)
                await bot.send_message(message.chat.id,
                                       f"*–í—ã –ø–æ–±–µ–¥–∏–ª–∏!*\n\n*–í–∞—à–∞ –Ω–∞–≥—Ä–∞–¥–∞*:\n"
                                       f"_–ú–æ–Ω–µ—Ç—ã_: *{int(enemy_money * (level + 1) ** 1.5):,} üí∏*\n"
                                       f"_–û–ø—ã—Ç_: *{int(enemy_exp * (level + 1) ** 1.5):,} ‚≠êÔ∏è*\n"
                                       f"_–û—á–∫–∏ –†–µ–π—Ç–∏–Ω–≥–∞_: *{enemy_rating:,} üèÜ*\n"
                                       f"_–ó–¥–æ—Ä–æ–≤—å–µ_: *{int(data[4])} ‚ù§/ {int(data[5])} ‚ù§ Ô∏è*", reply_markup=menu_kb,
                                       parse_mode='Markdown')
                cur.execute(f"""UPDATE Users SET Experience 
                            = {data[2] + int(enemy_exp * (level + 1) ** 1.5)}, 
                            Rating = {data[1] + enemy_rating}, Money = {data[3] + int(enemy_money * (level + 1) ** 1.5)} 
                            WHERE  TG_ID = {user_id}""")
                cur.execute(f"""UPDATE Users SET Status = 1 WHERE TG_ID = {user_id}""")
                connection.commit()
            else:
                data = cur.execute(
                    f"""SELECT User_Name, Rating, Experience, 
                                                            Money, Health_Points, Max_Health_Points, 
                                                            Base_Attack, Base_Shield, Critical_Attack, Critical_Chance, 
                                                            E_Shield, C_Shield, F_Shield, M_Shield, E_Attack, 
                                                            C_Attack, F_Attack, M_Attack FROM Users 
                                                            WHERE TG_ID = {user_id}""").fetchall()[
                    0]
                enemy_id = cur.execute(
                    f"""SELECT Current_Enemy_ID FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                    0][0]
                enemy = cur.execute(f"""SELECT * FROM Slimes WHERE Enemy_ID = {enemy_id}""").fetchall()[0]
                enemy_hp = cur.execute(
                    f"""SELECT Current_Enemy_HP FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                    0][0]
                enemy_hp_max = cur.execute(
                    f"""SELECT Current_Enemy_Max_HP FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                    0][0]
                enemy_attack = cur.execute(
                    f"""SELECT Current_Enemy_Attack FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                    0][0]
                await bot.send_message(message.chat.id, f'–í–ê–° –ê–¢–ê–ö–£–ï–¢ *{enemy[1]}*\n\n'
                                                        f'_–ó–¥–æ—Ä–æ–≤—å–µ_: *{enemy_hp} ‚ù§Ô∏è/ {enemy_hp_max} ‚ù§Ô∏è*\n'
                                                        f'_–ë–∞–∑–æ–≤—ã–π —É—Ä–æ–Ω_: *{enemy_attack:.2f}*\n',
                                       parse_mode='Markdown')
                hp = data[4]
                chance = random.randint(1, 100)
                if chance <= 10:
                    await bot.send_message(message.chat.id, f'–§–£–•, –≤—Ä–∞–≥ *–ø—Ä–æ–º–∞—Ö–Ω—É–ª—Å—è*', parse_mode='Markdown')
                elif chance >= 90 and enemy_hp != enemy_hp_max:
                    await bot.send_message(message.chat.id, f'–í—Ä–∞–≥ *–ø–æ–¥–ª–µ—á–∏–ª—Å—è* ‚õë', parse_mode='Markdown')
                    cur.execute(f"""UPDATE Users SET Current_Enemy_HP = {enemy_hp} WHERE TG_ID = {user_id}""")
                    connection.commit()
                else:
                    shield = \
                        cur.execute(
                            f"""SELECT {enemy[2]}_Shield FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                            0][0]
                    shield_all = cur.execute(
                        f"""SELECT Base_Shield FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                        0][0]
                    hp = hp + min(-int(enemy_attack * 0.1), -enemy_attack + shield + shield_all)
                    await bot.send_message(message.chat.id,
                                           f'_–í—Ä–∞–≥ –Ω–∞–Ω–µ—Å –≤–∞–º —É—Ä–æ–Ω_: *{-min(int(enemy_attack * 0.1), -enemy_attack + shield + shield_all):.2f} ‚ù§*\n'
                                           f'_–í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ_: *{max(0, hp)} ‚ù§Ô∏è/ {data[5]} ‚ù§Ô∏è*', parse_mode='Markdown')
                    if hp < 1:
                        cur.execute(
                            f"""UPDATE Users SET Health_Points = {int(data[5])} WHERE TG_ID = {user_id}""")
                        cur.execute(
                            f"""UPDATE Users SET Experience = {int(data[2] * 0.9)} WHERE TG_ID = {user_id}""")
                        cur.execute(
                            f"""UPDATE Users SET Rating = {max(0, data[1] - enemy[8] * 30)} WHERE TG_ID = {user_id}""")
                        connection.commit()
                        await bot.send_message(message.chat.id, f'*–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏* ‚ò†Ô∏è\n\n'
                                                                f'–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏:\n'
                                                                f'_–û–ø—ã—Ç_: *{data[2] - int(data[2] * 0.9)}* ‚≠êÔ∏è\n'
                                                                f'_–û—á–∫–∏ –†–µ–π—Ç–∏–Ω–≥–∞_: *{data[1] - max(0, data[1] - enemy[8] * 30)}* üèÜ\n'
                                                                f'\n'
                                                                f'_–í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–Ω–æ_', reply_markup=menu_kb,
                                               parse_mode='Markdown')
                        cur.execute(f"""UPDATE Users SET Status = 1 WHERE TG_ID = {user_id}""")
                        connection.commit()
                    else:
                        cur.execute(f"""UPDATE Users SET Health_Points = {int(hp)} WHERE TG_ID = {user_id}""")
                        enemy_id = cur.execute(
                            f"""SELECT Current_Enemy_ID FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                            0][0]
                        enemy = cur.execute(f"""SELECT * FROM Slimes WHERE Enemy_ID = {enemy_id}""").fetchall()[0]
                        enemy_hp = cur.execute(
                            f"""SELECT Current_Enemy_HP FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                            0][0]
                        enemy_hp_max = cur.execute(
                            f"""SELECT Current_Enemy_Max_HP FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                            0][0]
                        enemy_attack = cur.execute(
                            f"""SELECT Current_Enemy_Attack FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                            0][0]
                        connection.commit()
                        #–≤–∞—Å –∞—Ç–∞–∫—É–µ—Ç
        elif message.text == '–û–≥–Ω–µ–Ω–Ω–∞—è –ê—Ç–∞–∫–∞ üî•':
            cur.execute(f"""UPDATE Users SET Money = Money + 3 WHERE TG_ID = {user_id}""")
            connection.commit()
            await bot.send_message(message.chat.id, f'–í—ã –ø–æ–ª—É—á–∏–ª–∏ 3 –º–æ–Ω–µ—Ç—ã üí∏')
            data = cur.execute(
                f"""SELECT User_Name, Rating, Experience, 
                                                                                                                Money, Health_Points, Max_Health_Points, 
                                                                                                                Base_Attack, Base_Shield, Critical_Attack, Critical_Chance, 
                                                                                                                E_Shield, C_Shield, F_Shield, M_Shield, E_Attack, 
                                                                                                                C_Attack, F_Attack, M_Attack FROM Users 
                                                                                                                WHERE TG_ID = {user_id}""").fetchall()[
                0]
            level = exp_to_level(data[2])
            chance = random.randint(1, 1000)
            critical_chance = cur.execute(
                f"""SELECT Critical_Chance FROM Users WHERE TG_ID = {user_id}""").fetchall()[0][
                0]
            critical_attack = cur.execute(
                f"""SELECT Critical_Attack FROM Users WHERE TG_ID = {user_id}""").fetchall()[0][
                0]
            attack = cur.execute(
                f"""SELECT Base_Attack FROM Users WHERE TG_ID = {user_id}""").fetchall()[0][
                0]
            adv_attack = cur.execute(
                f"""SELECT F_Attack FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                0][0]
            if chance <= critical_chance * 1000:
                attack = critical_attack + attack
                adv_attack = critical_attack + attack
                await bot.send_message(message.chat.id, f'–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –ê—Ç–∞–∫–∞ ‚ö°Ô∏è')
            enemy_id = cur.execute(
                f"""SELECT Current_Enemy_ID FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                0][0]
            enemy = cur.execute(f"""SELECT * FROM Slimes WHERE Enemy_ID = {enemy_id}""").fetchall()[0]
            enemy_hp = cur.execute(
                f"""SELECT Current_Enemy_HP FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                0][0]
            if enemy[2] == 'F':
                all_damage = int((attack ** 2 + adv_attack ** 2) ** 0.5)
                enemy_hp -= all_damage
                cur.execute(f"""UPDATE Users SET Current_Enemy_HP = {enemy_hp}""")
                connection.commit()
                await bot.send_message(message.chat.id, f'_–í–∞—à–∞ –∞—Ç–∞–∫–∞ –Ω–∞–Ω–µ—Å–ª–∞_: *{all_damage:.2f} ‚ù§Ô∏è*Ô∏è', parse_mode='Markdown')
            else:
                all_damage = int(attack * 0.85)
                enemy_hp -= all_damage
                cur.execute(f"""UPDATE Users SET Current_Enemy_HP = {enemy_hp}""")
                connection.commit()
                await bot.send_message(message.chat.id, f'_–í–∞—à–∞ –∞—Ç–∞–∫–∞ –Ω–∞–Ω–µ—Å–ª–∞_: *{all_damage:.2f} ‚ù§Ô∏è*Ô∏è', parse_mode='Markdown')
            if enemy_hp < 1:
                enemy_exp = enemy[7]
                enemy_money = enemy[6]
                enemy_rating = enemy[8]
                print(enemy_exp, enemy_money, enemy_rating)
                await bot.send_message(message.chat.id,
                                       f"*–í—ã –ø–æ–±–µ–¥–∏–ª–∏!*\n\n*–í–∞—à–∞ –Ω–∞–≥—Ä–∞–¥–∞*:\n"
                                       f"_–ú–æ–Ω–µ—Ç—ã_: *{int(enemy_money * (level + 1) ** 1.5):,} üí∏*\n"
                                       f"_–û–ø—ã—Ç_: *{int(enemy_exp * (level + 1) ** 1.5):,} ‚≠êÔ∏è*\n"
                                       f"_–û—á–∫–∏ –†–µ–π—Ç–∏–Ω–≥–∞_: *{enemy_rating:,} üèÜ*\n"
                                       f"_–ó–¥–æ—Ä–æ–≤—å–µ_: *{int(data[4])} ‚ù§/ {int(data[5])} ‚ù§ Ô∏è*", reply_markup=menu_kb,
                                       parse_mode='Markdown')
                cur.execute(f"""UPDATE Users SET Experience 
                                        = {data[2] + int(enemy_exp * (level + 1) ** 1.5)}, 
                                        Rating = {data[1] + enemy_rating}, Money = {data[3] + int(enemy_money * (level + 1) ** 1.5)} 
                                        WHERE  TG_ID = {user_id}""")
                cur.execute(f"""UPDATE Users SET Status = 1 WHERE TG_ID = {user_id}""")
                connection.commit()
            else:
                data = cur.execute(
                    f"""SELECT User_Name, Rating, Experience, 
                                                                        Money, Health_Points, Max_Health_Points, 
                                                                        Base_Attack, Base_Shield, Critical_Attack, Critical_Chance, 
                                                                        E_Shield, C_Shield, F_Shield, M_Shield, E_Attack, 
                                                                        C_Attack, F_Attack, M_Attack FROM Users 
                                                                        WHERE TG_ID = {user_id}""").fetchall()[
                    0]
                enemy_id = cur.execute(
                    f"""SELECT Current_Enemy_ID FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                    0][0]
                enemy = cur.execute(f"""SELECT * FROM Slimes WHERE Enemy_ID = {enemy_id}""").fetchall()[0]
                enemy_hp = cur.execute(
                    f"""SELECT Current_Enemy_HP FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                    0][0]
                enemy_hp_max = cur.execute(
                    f"""SELECT Current_Enemy_Max_HP FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                    0][0]
                enemy_attack = cur.execute(
                    f"""SELECT Current_Enemy_Attack FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                    0][0]
                await bot.send_message(message.chat.id, f'–í–ê–° –ê–¢–ê–ö–£–ï–¢ *{enemy[1]}*\n\n'
                                                        f'_–ó–¥–æ—Ä–æ–≤—å–µ_: *{enemy_hp} ‚ù§Ô∏è/ {enemy_hp_max} ‚ù§Ô∏è*\n'
                                                        f'_–ë–∞–∑–æ–≤—ã–π —É—Ä–æ–Ω_: *{enemy_attack:.2f}*\n',
                                       parse_mode='Markdown')
                hp = data[4]
                chance = random.randint(1, 100)
                if chance <= 10:
                    await bot.send_message(message.chat.id, f'–§–£–•, –≤—Ä–∞–≥ *–ø—Ä–æ–º–∞—Ö–Ω—É–ª—Å—è*', parse_mode='Markdown')
                elif chance >= 90 and enemy_hp != enemy_hp_max:
                    await bot.send_message(message.chat.id, f'–í—Ä–∞–≥ *–ø–æ–¥–ª–µ—á–∏–ª—Å—è* ‚õë', parse_mode='Markdown')
                    cur.execute(f"""UPDATE Users SET Current_Enemy_HP = {enemy_hp} WHERE TG_ID = {user_id}""")
                    connection.commit()
                else:
                    shield = \
                        cur.execute(
                            f"""SELECT {enemy[2]}_Shield FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                            0][0]
                    shield_all = cur.execute(
                        f"""SELECT Base_Shield FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                        0][0]
                    hp = hp + min(-int(enemy_attack * 0.1), -enemy_attack + shield + shield_all)
                    await bot.send_message(message.chat.id,
                                           f'_–í—Ä–∞–≥ –Ω–∞–Ω–µ—Å –≤–∞–º —É—Ä–æ–Ω_: *{-min(int(enemy_attack * 0.1), -enemy_attack + shield + shield_all):.2f} ‚ù§*\n'
                                           f'_–í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ_: *{max(0, hp)} ‚ù§Ô∏è/ {data[5]} ‚ù§Ô∏è*', parse_mode='Markdown')
                    if hp < 1:
                        cur.execute(
                            f"""UPDATE Users SET Health_Points = {int(data[5])} WHERE TG_ID = {user_id}""")
                        cur.execute(
                            f"""UPDATE Users SET Experience = {int(data[2] * 0.9)} WHERE TG_ID = {user_id}""")
                        cur.execute(
                            f"""UPDATE Users SET Rating = {max(0, data[1] - enemy[8] * 30)} WHERE TG_ID = {user_id}""")
                        connection.commit()
                        await bot.send_message(message.chat.id, f'*–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏* ‚ò†Ô∏è\n\n'
                                                                f'–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏:\n'
                                                                f'_–û–ø—ã—Ç_: *{data[2] - int(data[2] * 0.9)}* ‚≠êÔ∏è\n'
                                                                f'_–û—á–∫–∏ –†–µ–π—Ç–∏–Ω–≥–∞_: *{data[1] - max(0, data[1] - enemy[8] * 30)}* üèÜ\n'
                                                                f'\n'
                                                                f'_–í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–Ω–æ_', reply_markup=menu_kb,
                                               parse_mode='Markdown')
                        cur.execute(f"""UPDATE Users SET Status = 1 WHERE TG_ID = {user_id}""")
                        connection.commit()
                    else:
                        cur.execute(f"""UPDATE Users SET Health_Points = {int(hp)} WHERE TG_ID = {user_id}""")
                        enemy_id = cur.execute(
                            f"""SELECT Current_Enemy_ID FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                            0][0]
                        enemy = cur.execute(f"""SELECT * FROM Slimes WHERE Enemy_ID = {enemy_id}""").fetchall()[0]
                        enemy_hp = cur.execute(
                            f"""SELECT Current_Enemy_HP FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                            0][0]
                        enemy_hp_max = cur.execute(
                            f"""SELECT Current_Enemy_Max_HP FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                            0][0]
                        enemy_attack = cur.execute(
                            f"""SELECT Current_Enemy_Attack FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                            0][0]
                        connection.commit()
                        #–≤–∞—Å –∞—Ç–∞–∫—É–µ—Ç
        elif message.text == '–ú–∞–≥–∏—á–µ—Å–∫–∞—è –ê—Ç–∞–∫–∞ üîÆ':
            cur.execute(f"""UPDATE Users SET Money = Money + 3 WHERE TG_ID = {user_id}""")
            connection.commit()
            await bot.send_message(message.chat.id, f'–í—ã –ø–æ–ª—É—á–∏–ª–∏ 3 –º–æ–Ω–µ—Ç—ã üí∏')
            data = cur.execute(
                f"""SELECT User_Name, Rating, Experience, 
                                                                                                                Money, Health_Points, Max_Health_Points, 
                                                                                                                Base_Attack, Base_Shield, Critical_Attack, Critical_Chance, 
                                                                                                                E_Shield, C_Shield, F_Shield, M_Shield, E_Attack, 
                                                                                                                C_Attack, F_Attack, M_Attack FROM Users 
                                                                                                                WHERE TG_ID = {user_id}""").fetchall()[
                0]
            level = exp_to_level(data[2])
            chance = random.randint(1, 1000)
            critical_chance = cur.execute(
                f"""SELECT Critical_Chance FROM Users WHERE TG_ID = {user_id}""").fetchall()[0][
                0]
            critical_attack = cur.execute(
                f"""SELECT Critical_Attack FROM Users WHERE TG_ID = {user_id}""").fetchall()[0][
                0]
            attack = cur.execute(
                f"""SELECT Base_Attack FROM Users WHERE TG_ID = {user_id}""").fetchall()[0][
                0]
            adv_attack = cur.execute(
                f"""SELECT M_Attack FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                0][0]
            if chance <= critical_chance * 1000:
                attack = critical_attack + attack
                adv_attack = critical_attack + attack
                await bot.send_message(message.chat.id, f'–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –ê—Ç–∞–∫–∞ ‚ö°Ô∏è')
            enemy_id = cur.execute(
                f"""SELECT Current_Enemy_ID FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                0][0]
            enemy = cur.execute(f"""SELECT * FROM Slimes WHERE Enemy_ID = {enemy_id}""").fetchall()[0]
            enemy_hp = cur.execute(
                f"""SELECT Current_Enemy_HP FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                0][0]
            if enemy[2] == 'M':
                all_damage = int((attack ** 2 + adv_attack ** 2) ** 0.5)
                enemy_hp -= all_damage
                cur.execute(f"""UPDATE Users SET Current_Enemy_HP = {enemy_hp}""")
                connection.commit()
                await bot.send_message(message.chat.id, f'_–í–∞—à–∞ –∞—Ç–∞–∫–∞ –Ω–∞–Ω–µ—Å–ª–∞_: *{all_damage:.2f} ‚ù§Ô∏è*Ô∏è', parse_mode='Markdown')
            else:
                all_damage = int(attack * 0.85)
                enemy_hp -= all_damage
                cur.execute(f"""UPDATE Users SET Current_Enemy_HP = {enemy_hp}""")
                connection.commit()
                await bot.send_message(message.chat.id, f'_–í–∞—à–∞ –∞—Ç–∞–∫–∞ –Ω–∞–Ω–µ—Å–ª–∞_: *{all_damage:.2f} ‚ù§Ô∏è*Ô∏è', parse_mode='Markdown')
            if enemy_hp < 1:
                enemy_exp = enemy[7]
                enemy_money = enemy[6]
                enemy_rating = enemy[8]
                print(enemy_exp, enemy_money, enemy_rating)
                await bot.send_message(message.chat.id,
                                       f"*–í—ã –ø–æ–±–µ–¥–∏–ª–∏!*\n\n*–í–∞—à–∞ –Ω–∞–≥—Ä–∞–¥–∞*:\n"
                                       f"_–ú–æ–Ω–µ—Ç—ã_: *{int(enemy_money * (level + 1) ** 1.5):,} üí∏*\n"
                                       f"_–û–ø—ã—Ç_: *{int(enemy_exp * (level + 1) ** 1.5):,} ‚≠êÔ∏è*\n"
                                       f"_–û—á–∫–∏ –†–µ–π—Ç–∏–Ω–≥–∞_: *{enemy_rating:,} üèÜ*\n"
                                       f"_–ó–¥–æ—Ä–æ–≤—å–µ_: *{int(data[4])} ‚ù§/ {int(data[5])} ‚ù§ Ô∏è*", reply_markup=menu_kb, parse_mode='Markdown')
                cur.execute(f"""UPDATE Users SET Experience 
                                        = {data[2] + int(enemy_exp * (level + 1) ** 1.5)}, 
                                        Rating = {data[1] + enemy_rating}, Money = {data[3] + int(enemy_money * (level + 1) ** 1.5)} 
                                        WHERE  TG_ID = {user_id}""")
                cur.execute(f"""UPDATE Users SET Status = 1 WHERE TG_ID = {user_id}""")
                connection.commit()
            else:
                data = cur.execute(
                    f"""SELECT User_Name, Rating, Experience, 
                                                                        Money, Health_Points, Max_Health_Points, 
                                                                        Base_Attack, Base_Shield, Critical_Attack, Critical_Chance, 
                                                                        E_Shield, C_Shield, F_Shield, M_Shield, E_Attack, 
                                                                        C_Attack, F_Attack, M_Attack FROM Users 
                                                                        WHERE TG_ID = {user_id}""").fetchall()[
                    0]
                enemy_id = cur.execute(
                    f"""SELECT Current_Enemy_ID FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                    0][0]
                enemy = cur.execute(f"""SELECT * FROM Slimes WHERE Enemy_ID = {enemy_id}""").fetchall()[0]
                enemy_hp = cur.execute(
                    f"""SELECT Current_Enemy_HP FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                    0][0]
                enemy_hp_max = cur.execute(
                    f"""SELECT Current_Enemy_Max_HP FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                    0][0]
                enemy_attack = cur.execute(
                    f"""SELECT Current_Enemy_Attack FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                    0][0]
                await bot.send_message(message.chat.id, f'–í–ê–° –ê–¢–ê–ö–£–ï–¢ *{enemy[1]}*\n\n'
                                                        f'_–ó–¥–æ—Ä–æ–≤—å–µ_: *{enemy_hp} ‚ù§Ô∏è/ {enemy_hp_max} ‚ù§Ô∏è*\n'
                                                        f'_–ë–∞–∑–æ–≤—ã–π —É—Ä–æ–Ω_: *{enemy_attack:.2f}*\n',
                                       parse_mode='Markdown')
                hp = data[4]
                chance = random.randint(1, 100)
                if chance <= 10:
                    await bot.send_message(message.chat.id, f'–§–£–•, –≤—Ä–∞–≥ *–ø—Ä–æ–º–∞—Ö–Ω—É–ª—Å—è*', parse_mode='Markdown')
                elif chance >= 90 and enemy_hp != enemy_hp_max:
                    await bot.send_message(message.chat.id, f'–í—Ä–∞–≥ *–ø–æ–¥–ª–µ—á–∏–ª—Å—è* ‚õë', parse_mode='Markdown')
                    cur.execute(f"""UPDATE Users SET Current_Enemy_HP = {enemy_hp} WHERE TG_ID = {user_id}""")
                    connection.commit()
                else:
                    shield = \
                        cur.execute(
                            f"""SELECT {enemy[2]}_Shield FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                            0][0]
                    shield_all = cur.execute(
                        f"""SELECT Base_Shield FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                        0][0]
                    hp = hp + min(-int(enemy_attack * 0.1), -enemy_attack + shield + shield_all)
                    await bot.send_message(message.chat.id,
                                           f'_–í—Ä–∞–≥ –Ω–∞–Ω–µ—Å –≤–∞–º —É—Ä–æ–Ω_: *{-min(int(enemy_attack * 0.1), -enemy_attack + shield + shield_all):.2f} ‚ù§*\n'
                                           f'_–í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ_: *{max(0, hp)} ‚ù§Ô∏è/ {data[5]} ‚ù§Ô∏è*', parse_mode='Markdown')
                    if hp < 1:
                        cur.execute(
                            f"""UPDATE Users SET Health_Points = {int(data[5])} WHERE TG_ID = {user_id}""")
                        cur.execute(
                            f"""UPDATE Users SET Experience = {int(data[2] * 0.9)} WHERE TG_ID = {user_id}""")
                        cur.execute(
                            f"""UPDATE Users SET Rating = {max(0, data[1] - enemy[8] * 30)} WHERE TG_ID = {user_id}""")
                        connection.commit()
                        await bot.send_message(message.chat.id, f'*–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏* ‚ò†Ô∏è\n\n'
                                                                f'–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏:\n'
                                                                f'_–û–ø—ã—Ç_: *{data[2] - int(data[2] * 0.9)}* ‚≠êÔ∏è\n'
                                                                f'_–û—á–∫–∏ –†–µ–π—Ç–∏–Ω–≥–∞_: *{data[1] - max(0, data[1] - enemy[8] * 30)}* üèÜ\n'
                                                                f'\n'
                                                                f'_–í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–Ω–æ_', reply_markup=menu_kb,
                                               parse_mode='Markdown')
                        cur.execute(f"""UPDATE Users SET Status = 1 WHERE TG_ID = {user_id}""")
                        connection.commit()
                    else:
                        cur.execute(f"""UPDATE Users SET Health_Points = {int(hp)} WHERE TG_ID = {user_id}""")
                        enemy_id = cur.execute(
                            f"""SELECT Current_Enemy_ID FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                            0][0]
                        enemy = cur.execute(f"""SELECT * FROM Slimes WHERE Enemy_ID = {enemy_id}""").fetchall()[0]
                        enemy_hp = cur.execute(
                            f"""SELECT Current_Enemy_HP FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                            0][0]
                        enemy_hp_max = cur.execute(
                            f"""SELECT Current_Enemy_Max_HP FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                            0][0]
                        enemy_attack = cur.execute(
                            f"""SELECT Current_Enemy_Attack FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                            0][0]
                        connection.commit()
                        #–≤–∞—Å –∞—Ç–∞–∫—É–µ—Ç
        elif message.text == '–†–µ–π—Ç–∏–Ω–≥ ‚≠ê':
            cur.execute(f'''UPDATE Users SET status = {13} WHERE TG_ID = {user_id}''')
            connection.commit()
            all_rating = cur.execute(f"SELECT VK_ID, TG_ID, Rating FROM Users").fetchall()
            all_rating.sort(key=lambda x: x[2], reverse=True)
            current_row = cur.execute(
                f"SELECT VK_ID, TG_ID, Rating FROM Users WHERE TG_ID = {user_id}").fetchall()
            rating = all_rating.index(current_row[0])
            user_id = message.from_user.id
            raiting = cur.execute(f'''SELECT Rating FROM Users WHERE TG_ID = {user_id}''').fetchall()[0][0]
            connection.commit()
            await bot.send_message(message.chat.id, f'_–í–∞—à —Ä–µ–π—Ç–∏–Ω–≥_: *{rating + 1}* üèÜ\n'
                                                    f'_–í–∞—à–∏ –æ—á–∫–∏_: *{raiting}*  ‚≠ê\n'
                                                    f'_–û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥: http://185.185.71.200:8080_', reply_markup=menu_kb, parse_mode='Markdown')
        elif message.text == '–°—Ç–∏—Ö–∏–∏ üå±':
            user_id = message.from_user.id
            cur.execute(f'''UPDATE Users SET status = {12} WHERE TG_ID = {user_id}''')
            connection.commit()
            await bot.send_message(message.chat.id, '–¢—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ —Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –≤–∞—à–∏ —Å—Ç–∏—Ö–∏–π–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏.',
                                   reply_markup=fea_kb)
        elif message.text == '–ú–∞–≥–∞–∑–∏–Ω üõç':
            user_id = message.from_user.id
            cur.execute(f'''UPDATE Users SET status = {15} WHERE TG_ID = {user_id}''')
            money = cur.execute(f'''SELECT Money FROM Users WHERE TG_ID = {user_id}''').fetchall()[0][0]
            user_id = message.from_user.id
            data = cur.execute(
                f"""SELECT Experience, Money, Health_Points, Max_Health_Points
                                                                                 FROM Users WHERE TG_ID = {user_id}""").fetchall()[0]
            cost = int(money_coef(data[0]) * 0.03 * min(4, (data[3] / data[2])))
            if data[3] / data[2] == 1:
                cost = 0
            connection.commit()
            button_heal = KeyboardButton(f'–õ–µ—á–µ–Ω–∏–µ ‚õë ({cost} üí∏)')
            shop_kb = ReplyKeyboardMarkup(resize_keyboard=True).add(button_shop_fea, button_shop_base).add(
                button_heal).add(button_back)
            await bot.send_message(message.chat.id, '–¢—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ —É–ª—É—á—à–∞—Ç—å –≤–∞—à–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏. \n'
                                                    f'_–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç_: *{money}* üí∏',
                                   reply_markup=shop_kb, parse_mode='Markdown')
        elif '–õ–µ—á–µ–Ω–∏–µ' in message.text:
            user_id = message.from_user.id
            data = cur.execute(
                f"""SELECT Experience, Money, Health_Points, Max_Health_Points
                                                                     FROM Users WHERE TG_ID = {user_id}""").fetchall()[0]
            cost = int(money_coef(data[0]) * 0.03 * min(4, (data[3] / data[2])))
            if data[3] / data[2] == 1:
                cost = 0
            button_heal = KeyboardButton(f'–õ–µ—á–µ–Ω–∏–µ ‚õë ({cost} üí∏)')
            shop_kb = ReplyKeyboardMarkup(resize_keyboard=True).add(button_shop_fea, button_shop_base).add(
                button_heal).add(button_back)
            if data[2] >= data[3]:
                cur.execute(f"UPDATE Users SET Health_Points = {int(data[3])} WHERE TG_ID = {user_id}")
                connection.commit()
                await bot.send_message(message.chat.id, "_–í—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–¥–æ—Ä–æ–≤—ã_",
                                       reply_markup=shop_kb, parse_mode='Markdown')
            else:
                if cost > data[1]:
                    await bot.send_message(message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç(",
                                           reply_markup=shop_kb)
                else:
                    cur.execute(
                        f"UPDATE Users SET Health_Points = {int(data[3])} WHERE TG_ID = {user_id}")
                    cur.execute(f"UPDATE Users SET Money = {data[1] - cost} WHERE TG_ID = {user_id}")
                    connection.commit()
                    await bot.send_message(message.chat.id, "_–í—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–¥–æ—Ä–æ–≤—ã_",
                                           reply_markup=shop_kb, parse_mode='Markdown')
        elif message.text == '–ë–∞–∑–æ–≤—ã–µ —É–ª—É—á—à–µ–Ω–∏—è üõ°':
            data = cur.execute(
                f"""SELECT Max_Health_Points, 
                            Base_Attack, Base_Shield, Critical_Attack, Critical_Chance
                            FROM Users WHERE TG_ID = {user_id}""").fetchall()[0]
            k = 1.1
            kk = 0.001
            cost = money_coef(data[2]) * 0.2
            await bot.send_message(message.chat.id, f'–ë–∞–∑–æ–≤—ã–π —É—Ä–æ–Ω: \n–ë—ã–ª–æ: {data[1]:.2f} ‚öîÔ∏è \n–°—Ç–∞–Ω–µ—Ç: {(data[1] + 5) * k:.2f} ‚öîÔ∏è\n–°—Ç–æ–∏–º–æ—Å—Ç—å: {max(100, int(((data[1] + 5) * k - data[1]) * cost))} üí∏ '
                                                    f'\n–ë–∞–∑–æ–≤–∞—è –∑–∞—â–∏—Ç–∞: \n–ë—ã–ª–æ: {data[2]:.2f} üõ° \n–°—Ç–∞–Ω–µ—Ç: {(data[2] + 5) * k:.2f} üõ° \n–°—Ç–æ–∏–º–æ—Å—Ç—å: {max(100, int(((data[2] + 5) * k - data[2]) * cost))} üí∏ '
                                                    f'\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ:\n–ë—ã–ª–æ: {data[0]:.2f} ‚õë \n–°—Ç–∞–Ω–µ—Ç: {(data[0] + 5) * k:.2f} ‚õë \n–°—Ç–æ–∏–º–æ—Å—Ç—å: {max(100, int(((data[0] + 5) * k - data[0]) * cost))} üí∏ '
                                                    f'\n–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω: \n–ë—ã–ª–æ: {data[3]:.2f}  ‚ö°Ô∏è \n–°—Ç–∞–Ω–µ—Ç: {(data[3] + 1) * k:.2f}  ‚ö°Ô∏è \n–°—Ç–æ–∏–º–æ—Å—Ç—å: {max(100, int(((data[3] + 15) * k - data[3]) * cost))} üí∏ \n'
                                                    f'–®–∞–Ω—Å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —É—Ä–æ–Ω–∞: \n–ë—ã–ª–æ: {data[4]:.2f} ü§ûüèª \n–°—Ç–∞–Ω–µ—Ç: {data[4] + kk:.2f} ü§ûüèª \n–°—Ç–æ–∏–º–æ—Å—Ç—å: {max(100, int(((data[4] + 25) * k - data[4]) * cost))} üí∏',
                                   reply_markup=shop_base_kb)
            cur.execute(
                f"UPDATE Users SET Status = 105 WHERE TG_ID = {user_id}")
            connection.commit()
        elif message.text == '–ë–∞–∑–æ–≤—ã–π —É—Ä–æ–Ω ‚öîÔ∏è':
            data = cur.execute(
                f"""SELECT Max_Health_Points, 
                            Base_Attack, Base_Shield, Critical_Attack, Critical_Chance, Money, Experience
                            FROM Users WHERE TG_ID = {user_id}""").fetchall()[0]
            k = 1.1
            kk = 0.001
            cost = money_coef(data[6]) * 0.2
            money = data[5]
            if money < max(100, int(((data[1] + 5) * k - data[1]) * cost)):
                await bot.send_message(message.chat.id, f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç(')
            else:
                cur.execute(f"""UPDATE Users SET 
                                                           Experience = {data[1] + max(100, int(((data[1] + 5) * k - data[1]) * cost)) * 0.05} 
                                                           WHERE TG_ID = {user_id}""")
                cur.execute(f"""UPDATE Users SET 
                                       Money = {money - max(100, int(((data[1] + 5) * k - data[1]) * cost))} 
                                       WHERE TG_ID = {user_id}""")
                cur.execute(
                    f"""UPDATE Users SET Base_Attack = {(data[1] + 5) * k} WHERE TG_ID = {user_id}""")
                data = cur.execute(f"""SELECT Base_Attack, Money FROM Users WHERE TG_ID = {user_id}""").fetchall()[0]
                connection.commit()
                await bot.send_message(message.chat.id, f'–£—Å–ø–µ—Ö. –ú–æ–Ω–µ—Ç—ã: {data[-1]} üí∏\n'
                                                        f'–í–∞—à –ë–∞–∑–æ–≤—ã–π —É—Ä–æ–Ω: {data[0]:.2f} ‚öîÔ∏è\n'
                                                        f'–°–ª–µ–¥—É—é—â–µ–µ —É–ª—É—á—à–µ–Ω–∏–µ: {(data[0] + 5) * k:.2f} ‚öîÔ∏è',
                                       reply_markup=shop_base_kb)
            cur.execute(
                f"UPDATE Users SET Status = 105 WHERE TG_ID = {user_id}")
            connection.commit()
        elif message.text == '–ë–∞–∑–æ–≤–∞—è –∑–∞—â–∏—Ç–∞ üõ°':
            data = cur.execute(
                f"""SELECT Max_Health_Points, 
                            Base_Attack, Base_Shield, Critical_Attack, Critical_Chance, Money, Experience
                            FROM Users WHERE TG_ID = {user_id}""").fetchall()[0]
            k = 1.1
            kk = 0.001
            cost = money_coef(data[6]) * 0.2
            money = data[5]
            if money < max(100, int(((data[2] + 5) * k - data[2]) * cost)):
                await bot.send_message(message.chat.id, f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç(')
            else:
                cur.execute(f"""UPDATE Users SET 
                                                           Experience = {data[6] + max(100, int(((data[2] + 5) * k - data[2]) * cost)) * 0.05} 
                                                           WHERE TG_ID = {user_id}""")
                cur.execute(f"""UPDATE Users SET 
                                       Money = {money - max(100, int(((data[2] + 5) * k - data[2]) * cost))} 
                                       WHERE TG_ID = {user_id}""")
                cur.execute(
                    f"""UPDATE Users SET Base_Shield = {(data[2] + 5) * k} WHERE TG_ID = {user_id}""")
                data = cur.execute(f"""SELECT Base_Shield, Money FROM Users WHERE TG_ID = {user_id}""").fetchall()[0]
                connection.commit()
                await bot.send_message(message.chat.id, f'–£—Å–ø–µ—Ö. –ú–æ–Ω–µ—Ç—ã: {data[-1]} üí∏ \n'
                                                        f'–í–∞—à –ë–∞–∑–æ–≤–∞—è –∑–∞—â–∏—Ç–∞: {data[0]:.2f} üõ°\n'
                                                        f'–°–ª–µ–¥—É—é—â–µ–µ —É–ª—É—á—à–µ–Ω–∏–µ: {(data[0] + 5) * k:.2f} üõ°',
                                       reply_markup=shop_base_kb)
            cur.execute(
                f"UPDATE Users SET Status = 105 WHERE TG_ID = {user_id}")
            connection.commit()
        elif message.text == '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –ó–¥–æ—Ä–æ–≤—å–µ ‚õë':
            data = cur.execute(
                f"""SELECT Max_Health_Points, 
                            Base_Attack, Base_Shield, Critical_Attack, Critical_Chance, Money, Experience
                            FROM Users WHERE TG_ID = {user_id}""").fetchall()[0]
            k = 1.1
            kk = 0.001
            cost = money_coef(data[6]) * 0.2
            money = data[5]
            if money < max(100, int(((data[0] + 5) * k - data[0]) * cost)):
                await bot.send_message(message.chat.id, f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç(')
            else:
                cur.execute(f"""UPDATE Users SET 
                               Experience = {data[6] + max(100, int(((data[0] + 5) * k - data[0]) * cost)) * 0.05} 
                               WHERE TG_ID = {user_id}""")
                cur.execute(f"""UPDATE Users SET 
                                       Money = {money - max(100, int(((data[0] + 5) * k - data[0]) * cost))} 
                                       WHERE TG_ID = {user_id}""")
                cur.execute(
                    f"""UPDATE Users SET Max_Health_Points = {(data[0] + 5) * k} WHERE TG_ID = {user_id}""")
                data = cur.execute(f"""SELECT Max_Health_Points, Money FROM Users WHERE TG_ID = {user_id}""").fetchall()[0]
                connection.commit()
                await bot.send_message(message.chat.id, f'–£—Å–ø–µ—Ö. –ú–æ–Ω–µ—Ç—ã: {data[-1]} üí∏ \n'
                                                        f'–í–∞—à–µ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ: {data[0]:.2f} ‚õë\n'
                                                        f'–°–ª–µ–¥—É—é—â–µ–µ —É–ª—É—á—à–µ–Ω–∏–µ: {(data[0] + 5) * k:.2f} Ô∏è ‚õë',
                                       reply_markup=shop_base_kb)
            cur.execute(
                f"UPDATE Users SET Status = 105 WHERE TG_ID = {user_id}")
            connection.commit()
        elif message.text == '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω ‚ö°Ô∏è':
            data = cur.execute(
                f"""SELECT Max_Health_Points, 
                            Base_Attack, Base_Shield, Critical_Attack, Critical_Chance, Money, Experience
                            FROM Users WHERE TG_ID = {user_id}""").fetchall()[0]
            k = 1.1
            kk = 0.001
            cost = money_coef(data[6]) * 0.2
            money = data[5]
            if money < max(100, int(((data[3] + 15) * k - data[3]) * cost)):
                await bot.send_message(message.chat.id, f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç(')
            else:
                cur.execute(f"""UPDATE Users SET 
                               Experience = {data[6] + max(100, int(((data[3] + 15) * k - data[3]) * cost)) * 0.05} 
                               WHERE TG_ID = {user_id}""")
                cur.execute(f"""UPDATE Users SET 
                                       Money = {money - max(100, int(((data[3] + 15) * k - data[3]) * cost))} 
                                       WHERE TG_ID = {user_id}""")
                cur.execute(
                    f"""UPDATE Users SET Critical_Attack = {(data[3] + 1) * k} WHERE TG_ID = {user_id}""")
                data = cur.execute(f"""SELECT Critical_Attack, Money FROM Users WHERE TG_ID = {user_id}""").fetchall()[0]
                connection.commit()
                await bot.send_message(message.chat.id, f'–£—Å–ø–µ—Ö. –ú–æ–Ω–µ—Ç—ã: {data[-1]} üí∏ \n'
                                                        f'–í–∞—à –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω: {data[0]:.2f} ‚ö°\nÔ∏è'
                                                        f'–°–ª–µ–¥—É—é—â–µ–µ —É–ª—É—á—à–µ–Ω–∏–µ: {(data[0] + 1) * k:.2f} ‚ö°',
                                       reply_markup=shop_base_kb)
            cur.execute(
                f"UPDATE Users SET Status = 105 WHERE TG_ID = {user_id}")
            connection.commit()
        elif message.text == '–®–∞–Ω—Å –Ω–∞ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É–¥–∞—Ä ü§ûüèª':
            data = cur.execute(
                f"""SELECT Max_Health_Points, 
                            Base_Attack, Base_Shield, Critical_Attack, Critical_Chance, Money, Experience
                            FROM Users WHERE TG_ID = {user_id}""").fetchall()[0]
            k = 1.1
            kk = 0.001
            cost = money_coef(data[6]) * 0.2
            money = data[5]
            if money < max(100, int(((data[4] + 25) * k - data[4]) * cost)):
                await bot.send_message(message.chat.id, f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç(')
            else:
                cur.execute(f"""UPDATE Users SET 
                               Experience = {data[6] + max(100, int(((data[4] + 25) * k - data[4]) * cost)) * 0.05} 
                               WHERE TG_ID = {user_id}""")
                cur.execute(f"""UPDATE Users SET 
                                       Money = {money - max(100, int(((data[4] + 25) * k - data[4]) * cost))} 
                                       WHERE TG_ID = {user_id}""")
                cur.execute(
                    f"""UPDATE Users SET Critical_Chance = {data[4] + kk} WHERE TG_ID = {user_id}""")
                data = cur.execute(f"""SELECT Critical_Chance, Money FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                    0]
                connection.commit()
                await bot.send_message(message.chat.id, f'–£—Å–ø–µ—Ö. –ú–æ–Ω–µ—Ç—ã: {data[-1]} üí∏ \n'
                                                        f'–í–∞—à —à–∞–Ω—Å –Ω–∞ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É–¥–∞—Ä: {data[0]:.2f} ü§ûüèª\n'
                                                        f'–°–ª–µ–¥—É—é—â–µ–µ —É–ª—É—á—à–µ–Ω–∏–µ: {data[0] + kk:.2f} ü§ûüèª',
                                       reply_markup=shop_base_kb)
            cur.execute(
                f"UPDATE Users SET Status = 105 WHERE TG_ID = {user_id}")
            connection.commit()
        elif message.text == '–°—Ç–∏—Ö–∏–π–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è üå±':
            #data = cur.execute(
                #f"""SELECT E_Shield, E_Attack, C_Shield, C_Attack, F_Shield, F_Attack, M_Shield, M_Attack,
                            #FROM Users WHERE TG_ID = {user_id}""").fetchall()[0]
            #k = 1.1
            #kk = 0.001
            #cost = money_coef(data[2]) * 0.2
            #await bot.send_message(message.chat.id, f'–§–∏–∑–∏—á–µ—Å–∫–∞—è –∞—Ç–∞–∫–∞: \n–ë—ã–ª–æ {data[1]:.2f} ‚öîÔ∏è \n–°—Ç–∞–Ω–µ—Ç: {(data[1] + 5) * k:.2f} ‚öîÔ∏è\n–°—Ç–æ–∏–º–æ—Å—Ç—å: {max(100, int(((data[1] + 5) * k - data[1]) * cost))} üí∏ '
                                                    #f'\n–ë–∞–∑–æ–≤–∞—è –∑–∞—â–∏—Ç–∞: \n–ë—ã–ª–æ {data[2]:.2f} üõ° \n–°—Ç–∞–Ω–µ—Ç: {(data[2] + 5) * k:.2f} üõ° \n–°—Ç–æ–∏–º–æ—Å—Ç—å: {max(100, int(((data[2] + 5) * k - data[2]) * cost))} üí∏ '
                                                    #f'\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ:\n–ë—ã–ª–æ {data[0]:.2f} ‚õë \n–°—Ç–∞–Ω–µ—Ç: {(data[0] + 5) * k:.2f} ‚õë \n–°—Ç–æ–∏–º–æ—Å—Ç—å: {max(100, int(((data[0] + 5) * k - data[0]) * cost))} üí∏ '
                                                    #f'\n–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω: \n–ë—ã–ª–æ {data[3]:.2f}  ‚ö°Ô∏è \n–°—Ç–∞–Ω–µ—Ç: {(data[3] + 1) * k:.2f}  ‚ö°Ô∏è \n–°—Ç–æ–∏–º–æ—Å—Ç—å: {max(100, int(((data[3] + 15) * k - data[3]) * cost))} üí∏ \n'
                                                    #f'–®–∞–Ω—Å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —É—Ä–æ–Ω–∞: \n–ë—ã–ª–æ {data[4]:.2f} ü§ûüèª \n–°—Ç–∞–Ω–µ—Ç: {data[4] + kk:.2f} ü§ûüèª \n–°—Ç–æ–∏–º–æ—Å—Ç—å: {max(100, int(((data[4] + 25) * k - data[4]) * cost))} üí∏'
                                                    #f'\n–ë–∞–∑–æ–≤—ã–π —É—Ä–æ–Ω: \n–ë—ã–ª–æ {data[1]:.2f} ‚öîÔ∏è \n–°—Ç–∞–Ω–µ—Ç: {(data[1] + 5) * k:.2f} ‚öîÔ∏è\n–°—Ç–æ–∏–º–æ—Å—Ç—å: {max(100, int(((data[1] + 5) * k - data[1]) * cost))} üí∏ '
                                                    #f'\n–ë–∞–∑–æ–≤–∞—è –∑–∞—â–∏—Ç–∞: \n–ë—ã–ª–æ {data[2]:.2f} üõ° \n–°—Ç–∞–Ω–µ—Ç: {(data[2] + 5) * k:.2f} üõ° \n–°—Ç–æ–∏–º–æ—Å—Ç—å: {max(100, int(((data[2] + 5) * k - data[2]) * cost))} üí∏ '
                                                    #f'\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ:\n–ë—ã–ª–æ {data[0]:.2f} ‚õë \n–°—Ç–∞–Ω–µ—Ç: {(data[0] + 5) * k:.2f} ‚õë \n–°—Ç–æ–∏–º–æ—Å—Ç—å: {max(100, int(((data[0] + 5) * k - data[0]) * cost))} üí∏ '
                                                    #f'\n–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω: \n–ë—ã–ª–æ {data[3]:.2f}  ‚ö°Ô∏è \n–°—Ç–∞–Ω–µ—Ç: {(data[3] + 1) * k:.2f}  ‚ö°Ô∏è \n–°—Ç–æ–∏–º–æ—Å—Ç—å: {max(100, int(((data[3] + 15) * k - data[3]) * cost))} üí∏ \n'
                                                    #f'–®–∞–Ω—Å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —É—Ä–æ–Ω–∞: \n–ë—ã–ª–æ {data[4]:.2f} ü§ûüèª \n–°—Ç–∞–Ω–µ—Ç: {data[4] + kk:.2f} ü§ûüèª \n–°—Ç–æ–∏–º–æ—Å—Ç—å: {max(100, int(((data[4] + 25) * k - data[4]) * cost))} üí∏',
                                   #reply_markup=shop_adv_kb)
            await bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–ª—É—á—à–∏—Ç—å:', reply_markup=fea_kb)
            cur.execute(
                f"UPDATE Users SET Status = 205 WHERE TG_ID = {user_id}")
            connection.commit()
        elif message.text == '–ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ üåà':
            user_id = message.from_user.id
            cur.execute(f'''UPDATE Users SET status = {12} WHERE TG_ID = {user_id}''')
            connection.commit()
            data = cur.execute(
                f"""SELECT Max_Health_Points, 
                                        Base_Attack, Base_Shield, Critical_Attack, Critical_Chance, Health_Points, Experience, Money
                                        FROM Users WHERE TG_ID = {user_id}""").fetchall()[0]
            if exp_to_level(data[6]) < 3:
                stic = 'üë∂üèª'
            elif exp_to_level(data[6]) >= 3 and exp_to_level(data[6]) < 5:
                stic = 'üë¶üèº'
            elif exp_to_level(data[6]) >= 5 and exp_to_level(data[6]) < 7:
                stic = 'üë®üèª‚Äç'
            elif exp_to_level(data[6]) >= 7 and exp_to_level(data[6]) < 20:
                stic = 'üë®üèª‚Äçü¶≥‚Äç'
            elif exp_to_level(data[6]) >= 20:
                stic = 'üëπ'
            await bot.send_message(message.chat.id, f'–í–∞—à —É—Ä–æ–≤–µ–Ω—å: {exp_to_level(data[6])} {stic}\n–í–∞—à–∏ –º–æ–Ω–µ—Ç—ã: {data[7]} üí∏\n'
                                   f'–ë–∞–∑–æ–≤—ã–π —É—Ä–æ–Ω: {data[1]:.2f} ‚öîÔ∏è \n–ë–∞–∑–æ–≤–∞—è –∑–∞—â–∏—Ç–∞: {data[2]:.2f} üõ° \n–ù–∞—Å—Ç–æ—è—â–µ–µ –∑–¥–æ—Ä–æ–≤—å–µ: {data[5]} ‚ù§Ô∏è\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ: {data[0]:.2f} ‚õë \n–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω: {data[3]:.2f}  ‚ö°Ô∏è \n'
                                   f'–®–∞–Ω—Å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —É—Ä–æ–Ω–∞: \n{data[4]:.2f} ü§ûüèª ')
            cur.execute(
                f"UPDATE Users SET Status = 12 WHERE TG_ID = {user_id}")
            connection.commit()
        elif message.text == '–§–∏–∑–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ ü¶æ':
            status = cur.execute(f'''SELECT status FROM Users WHERE TG_ID = {user_id}''').fetchall()[0][0]
            user_id = message.from_user.id
            data = cur.execute(f"""SELECT E_Shield, C_Shield, Experience, F_Shield, M_Shield, E_Attack, 
                                            C_Attack, F_Attack, M_Attack FROM Users 
                                            WHERE TG_ID = {user_id}""").fetchall()[0]
            k = 1.1
            kk = 0.001
            cost = money_coef((data[2]) * 0.1)
            if status == 205:
                cur.execute(
                    f"UPDATE Users SET Status = 2051 WHERE TG_ID = {user_id}")
                connection.commit()
                await bot.send_message(message.chat.id, f'–§–∏–∑—á–µ—Å–∫–∞—è –∞—Ç–∞–∫–∞ ü¶æ:\n–ë—ã–ª–æ:\n{data[5]:.2f} ‚öî\n–°—Ç–∞–Ω–µ—Ç:\n{(data[5] + 10) * k:.2f} ‚öî\n–°—Ç–æ–∏–º–æ—Å—Ç—å:\n{max(100, int(((data[5] + 10) * k - data[5]) * cost))} –º–æ–Ω–µ—Çüí∏\n'
                                                        f'–§–∏–∑–∏—á–µ—Å–∫–∞—è –∑–∞—â–∏—Ç–∞ ü¶æ:\n–ë—ã–ª–æ:\n{data[0]:.2f} üõ°\n–°—Ç–∞–Ω–µ—Ç:\n{(data[0] + 10) * k:.2f} üõ°\n–°—Ç–æ–∏–º–æ—Å—Ç—å:\n{max(100, int(((data[0] + 10) * k - data[0]) * cost))} –º–æ–Ω–µ—Çüí∏',
                                       reply_markup=aors_kb)
                await bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ, —á—Ç–æ —É–ª—É—á—à–∏—Ç—å:')
            else:
                fea_E = cur.execute(f'''SELECT E_Shield, E_Attack FROM Users WHERE TG_ID = {user_id}''').fetchall()[0]
                connection.commit()
                await bot.send_message(message.chat.id, f'–í–∞—à–∞ –§–∏–∑–∏—á–µ—Å–∫–∞—è –∞—Ç–∞–∫–∞: {fea_E[1]:.2f} ‚öî \n'
                                       f'–í–∞—à–∞ –§–∏–∑—á–µ—Å–∫–∞—è –∑–∞—â–∏—Ç–∞: {fea_E[0]:.2f} üõ°',
                                       reply_markup=fea_kb)
        elif message.text == '–ö—Ä–∏–æ–≥–µ–Ω–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ üßä':
            status = cur.execute(f'''SELECT status FROM Users WHERE TG_ID = {user_id}''').fetchall()[0][0]
            user_id = message.from_user.id
            data = cur.execute(f"""SELECT E_Shield, C_Shield, Experience, F_Shield, M_Shield, E_Attack, 
                                                        C_Attack, F_Attack, M_Attack FROM Users 
                                                        WHERE TG_ID = {user_id}""").fetchall()[0]
            k = 1.1
            kk = 0.001
            cost = money_coef((data[2]) * 0.1)
            if status == 205:
                cur.execute(
                    f"UPDATE Users SET Status = 2052 WHERE TG_ID = {user_id}")
                connection.commit()
                await bot.send_message(message.chat.id,
                                       f'–ö—Ä–∏–æ–≥–µ–Ω–Ω–∞—è –∞—Ç–∞–∫–∞ üßä:\n–ë—ã–ª–æ:\n{data[6]:.2f} ‚öî\n–°—Ç–∞–Ω–µ—Ç:\n{(data[6] + 10) * k:.2f} ‚öî\n–°—Ç–æ–∏–º–æ—Å—Ç—å:\n{max(100, int(((data[6] + 10) * k - data[5]) * cost))} –º–æ–Ω–µ—Çüí∏\n'
                                       f'–ö—Ä–∏–æ–≥–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞ üßä:\n–ë—ã–ª–æ:\n{data[1]:.2f} üõ°\n–°—Ç–∞–Ω–µ—Ç:\n{(data[1] + 10) * k:.2f} üõ°\n–°—Ç–æ–∏–º–æ—Å—Ç—å:\n{max(100, int(((data[1] + 10) * k - data[0]) * cost))} –º–æ–Ω–µ—Çüí∏',
                                       reply_markup=aors_kb)
                await bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ, —á—Ç–æ —É–ª—É—á—à–∏—Ç—å:')
            else:
                fea_E = cur.execute(f'''SELECT C_Shield, C_Attack FROM Users WHERE TG_ID = {user_id}''').fetchall()[0]
                connection.commit()
                await bot.send_message(message.chat.id, f'–í–∞—à–∞ –ö—Ä–∏–æ–≥–µ–Ω–Ω–∞—è –∞—Ç–∞–∫–∞: {fea_E[1]:.2f} ‚öî \n'
                                       f'–í–∞—à–∞ –ö—Ä–∏–æ–≥–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞: {fea_E[0]:.2f} üõ°',
                                       reply_markup=fea_kb)
        elif message.text == '–û–≥–Ω–µ–Ω–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ üî•':
            status = cur.execute(f'''SELECT status FROM Users WHERE TG_ID = {user_id}''').fetchall()[0][0]
            user_id = message.from_user.id
            data = cur.execute(f"""SELECT E_Shield, C_Shield, Experience, F_Shield, M_Shield, E_Attack, 
                                                        C_Attack, F_Attack, M_Attack FROM Users 
                                                        WHERE TG_ID = {user_id}""").fetchall()[0]
            k = 1.1
            kk = 0.001
            cost = money_coef((data[2]) * 0.1)
            if status == 205:
                cur.execute(
                    f"UPDATE Users SET Status = 2053 WHERE TG_ID = {user_id}")
                connection.commit()
                await bot.send_message(message.chat.id,
                                       f'–û–≥–Ω–µ–Ω–Ω–∞—è –∞—Ç–∞–∫–∞ üî•:\n–ë—ã–ª–æ:\n{data[7]:.2f} ‚öî\n–°—Ç–∞–Ω–µ—Ç:\n{(data[7] + 10) * k:.2f} ‚öî\n–°—Ç–æ–∏–º–æ—Å—Ç—å:\n{max(100, int(((data[7] + 10) * k - data[7]) * cost))} –º–æ–Ω–µ—Çüí∏\n'
                                       f'–û–≥–Ω–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞ üî•:\n–ë—ã–ª–æ:\n{data[3]:.2f} üõ°\n–°—Ç–∞–Ω–µ—Ç:\n{(data[3] + 10) * k:.2f} üõ°\n–°—Ç–æ–∏–º–æ—Å—Ç—å:\n{max(100, int(((data[3] + 10) * k - data[3]) * cost))} –º–æ–Ω–µ—Çüí∏',
                                       reply_markup=aors_kb)
                await bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ, —á—Ç–æ —É–ª—É—á—à–∏—Ç—å:')
            else:
                fea_E = cur.execute(f'''SELECT F_Shield, F_Attack FROM Users WHERE TG_ID = {user_id}''').fetchall()[0]
                connection.commit()
                await bot.send_message(message.chat.id, f'–í–∞—à–∞ –û–≥–Ω–µ–Ω–Ω–∞—è –∞—Ç–∞–∫–∞: {fea_E[1]:.2f} ‚öî \n'
                                       f'–í–∞—à–∞ –û–≥–Ω–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞: {fea_E[0]:.2f} üõ°',
                                       reply_markup=fea_kb)
        elif message.text == '–ú–∞–≥–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ üîÆ':
            status = cur.execute(f'''SELECT status FROM Users WHERE TG_ID = {user_id}''').fetchall()[0][0]
            user_id = message.from_user.id
            data = cur.execute(f"""SELECT E_Shield, C_Shield, Experience, F_Shield, M_Shield, E_Attack, 
                                                        C_Attack, F_Attack, M_Attack FROM Users 
                                                        WHERE TG_ID = {user_id}""").fetchall()[0]
            k = 1.1
            kk = 0.001
            cost = money_coef((data[2]) * 0.1)
            if status == 205:
                cur.execute(
                    f"UPDATE Users SET Status = 2054 WHERE TG_ID = {user_id}")
                connection.commit()
                await bot.send_message(message.chat.id,
                                       f'–ú–∞–≥–∏—á–µ—Å–∫–∞—è –∞—Ç–∞–∫–∞ üîÆ:\n–ë—ã–ª–æ:\n{data[8]:.2f} ‚öî\n–°—Ç–∞–Ω–µ—Ç:\n{(data[8] + 10) * k:.2f} ‚öî\n–°—Ç–æ–∏–º–æ—Å—Ç—å:\n{max(100, int(((data[8] + 10) * k - data[8]) * cost))} –º–æ–Ω–µ—Çüí∏\n'
                                       f'–ú–∞–≥–∏—á–µ—Å–∫–∞—è –∑–∞—â–∏—Ç–∞ üîÆ:\n–ë—ã–ª–æ:\n{data[4]:.2f} üõ°\n–°—Ç–∞–Ω–µ—Ç:\n{(data[4] + 10) * k:.2f} üõ°\n–°—Ç–æ–∏–º–æ—Å—Ç—å:\n{max(100, int(((data[4] + 10) * k - data[4]) * cost))} –º–æ–Ω–µ—Çüí∏',
                                       reply_markup=aors_kb)
                await bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ, —á—Ç–æ —É–ª—É—á—à–∏—Ç—å:')
            else:
                fea_E = cur.execute(f'''SELECT M_Shield, M_Attack FROM Users WHERE TG_ID = {user_id}''').fetchall()[0]
                connection.commit()
                await bot.send_message(message.chat.id, f'–í–∞—à–∞ –ú–∞–≥–∏—á–µ—Å–∫–∞—è –∞—Ç–∞–∫–∞: {fea_E[1]:.2f} ‚öî \n'
                                       f'–í–∞—à–∞ –ú–∞–≥–∏—á–µ—Å–∫–∞—è –∑–∞—â–∏—Ç–∞: {fea_E[0]:.2f} üõ°',
                                       reply_markup=fea_kb)
        elif message.text == '–ê—Ç–∞–∫–∞ ‚öîÔ∏è':
            status = cur.execute(f'''SELECT status FROM Users WHERE TG_ID = {user_id}''').fetchall()[0][0]
            user_id = message.from_user.id
            data = cur.execute(f"""SELECT E_Shield, C_Shield, Experience, F_Shield, M_Shield, E_Attack, 
                                                                    C_Attack, F_Attack, M_Attack, Money FROM Users 
                                                                    WHERE TG_ID = {user_id}""").fetchall()[0]
            k = 1.1
            kk = 0.001
            cost = money_coef((data[2]) * 0.1)
            money = data[-1]
            if status == 2051:
                if money < max(100, int(((data[5] + 10) * k - data[5]) * cost)):
                    await bot.send_message(message.chat.id, f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç(')
                else:
                    cur.execute(f"""UPDATE Users SET 
                                                                Experience = {data[2] + max(100, int(((data[5] + 10) * k - data[5]) * cost)) * 0.05} 
                                                                WHERE TG_ID = {user_id}""")
                    cur.execute(f"""UPDATE Users SET 
                                            Money = {money - max(100, int(((data[5] + 10) * k - data[5]) * cost))} 
                                            WHERE TG_ID = {user_id}""")
                    cur.execute(
                        f"""UPDATE Users SET E_Attack = {(data[5] + 10) * k} WHERE TG_ID = {user_id}""")
                    data = cur.execute(f"""SELECT E_Attack, Money FROM Users WHERE TG_ID = {user_id}""").fetchall()[0]
                    connection.commit()
                    await bot.send_message(message.chat.id, f'–£—Å–ø–µ—Ö. –ú–æ–Ω–µ—Ç—ã: {data[-1]} üí∏\n'
                                                            f'–í–∞—à –§–∏–∑–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω: {data[0]:.2f} ‚öî\nÔ∏è'
                                                            f'–°–ª–µ–¥—É—é—â–µ–µ —É–ª—É—á—à–µ–Ω–∏–µ: {(data[0] + 10) * k:.2f} ‚öî')
            if status == 2052:
                if money < max(100, int(((data[6] + 10) * k - data[6]) * cost)):
                    await bot.send_message(message.chat.id, f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç(')
                else:
                    cur.execute(f"""UPDATE Users SET 
                                                                Experience = {data[2] + max(100, int(((data[6] + 10) * k - data[6]) * cost)) * 0.05} 
                                                                WHERE TG_ID = {user_id}""")
                    cur.execute(f"""UPDATE Users SET 
                                            Money = {money - max(100, int(((data[6] + 10) * k - data[6]) * cost))} 
                                            WHERE TG_ID = {user_id}""")
                    cur.execute(
                        f"""UPDATE Users SET C_Attack = {(data[6] + 10) * k} WHERE TG_ID = {user_id}""")
                    data = cur.execute(f"""SELECT C_Attack, Money FROM Users WHERE TG_ID = {user_id}""").fetchall()[0]
                    connection.commit()
                    await bot.send_message(message.chat.id, f'–£—Å–ø–µ—Ö. –ú–æ–Ω–µ—Ç—ã: {data[-1]} üí∏\n'
                                                            f'–í–∞—à –ö—Ä–∏–æ–≥–µ–Ω–Ω—ã–π —É—Ä–æ–Ω: {data[0]:.2f} ‚öîÔ∏è\nÔ∏è'
                                                            f'–°–ª–µ–¥—É—é—â–µ–µ —É–ª—É—á—à–µ–Ω–∏–µ: {(data[0] + 10) * k:.2f} ‚öî')
            if status == 2053:
                if money < max(100, int(((data[7] + 10) * k - data[7]) * cost)):
                    await bot.send_message(message.chat.id, f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç(')
                else:
                    cur.execute(f"""UPDATE Users SET 
                                                                Experience = {data[2] + max(100, int(((data[7] + 10) * k - data[7]) * cost)) * 0.05} 
                                                                WHERE TG_ID = {user_id}""")
                    cur.execute(f"""UPDATE Users SET 
                                            Money = {money - max(100, int(((data[7] + 10) * k - data[7]) * cost))} 
                                            WHERE TG_ID = {user_id}""")
                    cur.execute(
                        f"""UPDATE Users SET F_Attack = {(data[7] + 10) * k} WHERE TG_ID = {user_id}""")
                    data = cur.execute(f"""SELECT F_Attack, Money FROM Users WHERE TG_ID = {user_id}""").fetchall()[0]
                    connection.commit()
                    await bot.send_message(message.chat.id, f'–£—Å–ø–µ—Ö. –ú–æ–Ω–µ—Ç—ã: {data[-1]} üí∏\n'
                                                            f'–í–∞—à –û–≥–Ω–µ–Ω–Ω—ã–π —É—Ä–æ–Ω: {data[0]:.2f} ‚öîÔ∏è\nÔ∏è'
                                                            f'–°–ª–µ–¥—É—é—â–µ–µ —É–ª—É—á—à–µ–Ω–∏–µ: {(data[0] + 10) * k:.2f} ‚öî')
            if status == 2054:
                if money < max(100, int(((data[8] + 10) * k - data[8]) * cost)):
                    await bot.send_message(message.chat.id, f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç(')
                else:
                    cur.execute(f"""UPDATE Users SET 
                                                                Experience = {data[2] + max(100, int(((data[8] + 10) * k - data[8]) * cost)) * 0.05} 
                                                                WHERE TG_ID = {user_id}""")
                    cur.execute(f"""UPDATE Users SET 
                                            Money = {money - max(100, int(((data[8] + 10) * k - data[8]) * cost))} 
                                            WHERE TG_ID = {user_id}""")
                    cur.execute(
                        f"""UPDATE Users SET M_Attack = {(data[8] + 10) * k} WHERE TG_ID = {user_id}""")
                    data = cur.execute(f"""SELECT M_Attack, Money FROM Users WHERE TG_ID = {user_id}""").fetchall()[0]
                    connection.commit()
                    await bot.send_message(message.chat.id, f'–£—Å–ø–µ—Ö. –ú–æ–Ω–µ—Ç—ã: {data[-1]} üí∏\n'
                                                            f'–í–∞—à –ú–∞–≥–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω: {data[0]:.2f} ‚öî\nÔ∏è'
                                                            f'–°–ª–µ–¥—É—é—â–µ–µ —É–ª—É—á—à–µ–Ω–∏–µ: {(data[0] + 10) * k:.2f} ‚öî')
        elif message.text == '–ó–∞—â–∏—Ç–∞ üõ°':
            status = cur.execute(f'''SELECT status FROM Users WHERE TG_ID = {user_id}''').fetchall()[0][0]
            user_id = message.from_user.id
            data = cur.execute(f"""SELECT E_Shield, C_Shield, Experience, F_Shield, M_Shield, E_Attack, 
                                                                                C_Attack, F_Attack, M_Attack, Money FROM Users 
                                                                                WHERE TG_ID = {user_id}""").fetchall()[
                0]
            k = 1.1
            kk = 0.001
            cost = money_coef((data[2]) * 0.1)
            money = data[-1]
            if status == 2051:
                if money < max(100, int(((data[0] + 10) * k - data[0]) * cost)):
                    await bot.send_message(message.chat.id, f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç(')
                else:
                    cur.execute(f"""UPDATE Users SET 
                                                                            Experience = {data[2] + max(100, int(((data[0] + 10) * k - data[0]) * cost)) * 0.05} 
                                                                            WHERE TG_ID = {user_id}""")
                    cur.execute(f"""UPDATE Users SET 
                                                        Money = {money - max(100, int(((data[0] + 10) * k - data[0]) * cost))} 
                                                        WHERE TG_ID = {user_id}""")
                    cur.execute(
                        f"""UPDATE Users SET E_Shield = {(data[0] + 10) * k} WHERE TG_ID = {user_id}""")
                    data = cur.execute(f"""SELECT E_Shield, Money FROM Users WHERE TG_ID = {user_id}""").fetchall()[0]
                    connection.commit()
                    await bot.send_message(message.chat.id, f'–£—Å–ø–µ—Ö. –ú–æ–Ω–µ—Ç—ã: {data[-1]} üí∏\n'
                                                            f'–í–∞—à–∞ –§–∏–∑–∏—á–µ—Å–∫–∞—è –∑–∞—â–∏—Ç–∞: {data[0]:.2f} üõ°\nÔ∏è'
                                                            f'–°–ª–µ–¥—É—é—â–µ–µ —É–ª—É—á—à–µ–Ω–∏–µ: {(data[0] + 10) * k:.2f} üõ°')
            if status == 2052:
                if money < max(100, int(((data[1] + 10) * k - data[1]) * cost)):
                    await bot.send_message(message.chat.id, f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç(')
                else:
                    cur.execute(f"""UPDATE Users SET 
                                                                            Experience = {data[2] + max(100, int(((data[1] + 10) * k - data[1]) * cost)) * 0.05} 
                                                                            WHERE TG_ID = {user_id}""")
                    cur.execute(f"""UPDATE Users SET 
                                                        Money = {money - max(100, int(((data[1] + 10) * k - data[1]) * cost))} 
                                                        WHERE TG_ID = {user_id}""")
                    cur.execute(
                        f"""UPDATE Users SET C_Shield = {(data[1] + 10) * k} WHERE TG_ID = {user_id}""")
                    data = cur.execute(f"""SELECT C_Shield, Money FROM Users WHERE TG_ID = {user_id}""").fetchall()[0]
                    connection.commit()
                    await bot.send_message(message.chat.id, f'–£—Å–ø–µ—Ö. –ú–æ–Ω–µ—Ç—ã: {data[-1]} üí∏\n'
                                                            f'–í–∞—à–∞ –ö—Ä–∏–æ–≥–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞: {data[0]:.2f} üõ°\nÔ∏è'
                                                            f'–°–ª–µ–¥—É—é—â–µ–µ —É–ª—É—á—à–µ–Ω–∏–µ: {(data[0] + 10) * k:.2f} üõ°')
            if status == 2053:
                if money < max(100, int(((data[3] + 10) * k - data[3]) * cost)):
                    await bot.send_message(message.chat.id, f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç(')
                else:
                    cur.execute(f"""UPDATE Users SET 
                                                                            Experience = {data[2] + max(100, int(((data[3] + 10) * k - data[3]) * cost)) * 0.05} 
                                                                            WHERE TG_ID = {user_id}""")
                    cur.execute(f"""UPDATE Users SET 
                                                        Money = {money - max(100, int(((data[3] + 10) * k - data[7]) * cost))} 
                                                        WHERE TG_ID = {user_id}""")
                    cur.execute(
                        f"""UPDATE Users SET F_Shield = {(data[3] + 10) * k} WHERE TG_ID = {user_id}""")
                    data = cur.execute(f"""SELECT F_Shield, Money FROM Users WHERE TG_ID = {user_id}""").fetchall()[0]
                    connection.commit()

                    await bot.send_message(message.chat.id, f'–£—Å–ø–µ—Ö. –ú–æ–Ω–µ—Ç—ã: {data[-1]} üí∏\n'
                                                            f'–í–∞—à–∞ –û–≥–Ω–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞: {data[0]:.2f} üõ°\nÔ∏è'
                                                            f'–°–ª–µ–¥—É—é—â–µ–µ —É–ª—É—á—à–µ–Ω–∏–µ: {(data[0] + 10) * k:.2f} üõ°')
            if status == 2054:
                if money < max(100, int(((data[4] + 10) * k - data[4]) * cost)):
                    await bot.send_message(message.chat.id, f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç(')
                else:
                    cur.execute(f"""UPDATE Users SET 
                                                                            Experience = {data[2] + max(100, int(((data[4] + 10) * k - data[4]) * cost)) * 0.05} 
                                                                            WHERE TG_ID = {user_id}""")
                    cur.execute(f"""UPDATE Users SET 
                                                        Money = {money - max(100, int(((data[4] + 10) * k - data[4]) * cost))} 
                                                        WHERE TG_ID = {user_id}""")
                    cur.execute(
                        f"""UPDATE Users SET M_Shield = {(data[4] + 10) * k} WHERE TG_ID = {user_id}""")
                    data = cur.execute(f"""SELECT M_Shield, Money FROM Users WHERE TG_ID = {user_id}""").fetchall()[0]
                    connection.commit()
                    await bot.send_message(message.chat.id, f'–£—Å–ø–µ—Ö. –ú–æ–Ω–µ—Ç—ã: {data[-1]} üí∏\n'
                                                            f'–í–∞—à–∞ –ú–∞–≥–∏—á–µ—Å–∫–∞—è –∑–∞—â–∏—Ç–∞: {data[0]:.2f} üõ°\nÔ∏è'
                                                            f'–°–ª–µ–¥—É—é—â–µ–µ —É–ª—É—á—à–µ–Ω–∏–µ: {(data[0] + 10) * k:.2f} üõ°')
        elif cur.execute(f'''SELECT Status FROM Users WHERE TG_ID = {user_id}''').fetchall()[0][0] == 60:
            await bot.send_message(message.chat.id, f'*–ü—Ä–æ–º–∞—Ö*', parse_mode='Markdown', reply_markup=fight_kb)
            data = cur.execute(
                f"""SELECT User_Name, Rating, Experience, 
                                                            Money, Health_Points, Max_Health_Points, 
                                                            Base_Attack, Base_Shield, Critical_Attack, Critical_Chance, 
                                                            E_Shield, C_Shield, F_Shield, M_Shield, E_Attack, 
                                                            C_Attack, F_Attack, M_Attack FROM Users 
                                                            WHERE TG_ID = {user_id}""").fetchall()[
                0]
            enemy_id = cur.execute(
                f"""SELECT Current_Enemy_ID FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                0][0]
            enemy = cur.execute(f"""SELECT * FROM Slimes WHERE Enemy_ID = {enemy_id}""").fetchall()[0]
            enemy_hp = cur.execute(
                f"""SELECT Current_Enemy_HP FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                0][0]
            enemy_hp_max = cur.execute(
                f"""SELECT Current_Enemy_Max_HP FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                0][0]
            enemy_attack = cur.execute(
                f"""SELECT Current_Enemy_Attack FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                0][0]
            await bot.send_message(message.chat.id, f'–í–ê–° –ê–¢–ê–ö–£–ï–¢ *{enemy[1]}*\n\n'
                                                    f'_–ó–¥–æ—Ä–æ–≤—å–µ_: *{enemy_hp} ‚ù§Ô∏è/ {enemy_hp_max} ‚ù§Ô∏è*\n'
                                                    f'_–ë–∞–∑–æ–≤—ã–π —É—Ä–æ–Ω_: *{enemy_attack:.2f}*\n',
                                   parse_mode='Markdown')
            hp = data[4]
            chance = random.randint(1, 100)
            if chance <= 10:
                await bot.send_message(message.chat.id, f'–§–£–•, –≤—Ä–∞–≥ *–ø—Ä–æ–º–∞—Ö–Ω—É–ª—Å—è*', parse_mode='Markdown')
            elif chance >= 90 and enemy_hp != enemy_hp_max:
                await bot.send_message(message.chat.id, f'–í—Ä–∞–≥ *–ø–æ–¥–ª–µ—á–∏–ª—Å—è* ‚õë', parse_mode='Markdown')
                cur.execute(f"""UPDATE Users SET Current_Enemy_HP = {enemy_hp} WHERE TG_ID = {user_id}""")
                connection.commit()
            else:
                shield = \
                    cur.execute(
                        f"""SELECT {enemy[2]}_Shield FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                        0][0]
                shield_all = cur.execute(
                    f"""SELECT Base_Shield FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                    0][0]
                hp = hp + min(-int(enemy_attack * 0.1), -enemy_attack + shield + shield_all)
                await bot.send_message(message.chat.id,
                                       f'_–í—Ä–∞–≥ –Ω–∞–Ω–µ—Å –≤–∞–º —É—Ä–æ–Ω_: *{-min(int(enemy_attack * 0.1), -enemy_attack + shield + shield_all):.2f} ‚ù§*\n'
                                       f'_–í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ_: *{max(0, hp)} ‚ù§Ô∏è/ {data[5]} ‚ù§Ô∏è*', parse_mode='Markdown')
                if hp < 1:
                    cur.execute(
                        f"""UPDATE Users SET Health_Points = {int(data[5])} WHERE TG_ID = {user_id}""")
                    cur.execute(
                        f"""UPDATE Users SET Experience = {int(data[2] * 0.9)} WHERE TG_ID = {user_id}""")
                    cur.execute(
                        f"""UPDATE Users SET Rating = {max(0, data[1] - enemy[8] * 30)} WHERE TG_ID = {user_id}""")
                    connection.commit()
                    await bot.send_message(message.chat.id, f'*–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏* ‚ò†Ô∏è\n\n'
                                                            f'–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏:\n'
                                                            f'_–û–ø—ã—Ç_: *{data[2] - int(data[2] * 0.9)}* ‚≠êÔ∏è\n'
                                                            f'_–û—á–∫–∏ –†–µ–π—Ç–∏–Ω–≥–∞_: *{data[1] - max(0, data[1] - enemy[8] * 30)}* üèÜ\n'
                                                            f'\n'
                                                            f'_–í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–Ω–æ_', reply_markup=menu_kb,
                                           parse_mode='Markdown')

                    cur.execute(f"""UPDATE Users SET Status = 1 WHERE TG_ID = {user_id}""")
                    connection.commit()
                else:
                    cur.execute(f"""UPDATE Users SET Health_Points = {int(hp)} WHERE TG_ID = {user_id}""")
                    enemy_id = cur.execute(
                        f"""SELECT Current_Enemy_ID FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                        0][0]
                    enemy = cur.execute(f"""SELECT * FROM Slimes WHERE Enemy_ID = {enemy_id}""").fetchall()[0]
                    enemy_hp = cur.execute(
                        f"""SELECT Current_Enemy_HP FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                        0][0]
                    enemy_hp_max = cur.execute(
                        f"""SELECT Current_Enemy_Max_HP FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                        0][0]
                    enemy_attack = cur.execute(
                        f"""SELECT Current_Enemy_Attack FROM Users WHERE TG_ID = {user_id}""").fetchall()[
                        0][0]
                    connection.commit()
        #elif cur.execute(f'''SELECT Status FROM Users WHERE TG_ID = {user_id}''').fetchall()[0][0]:

            #await bot.send_message(message.chat.id, f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {username}!', reply_markup=menu_kb)
        else:
            await bot.send_message(message.chat.id, f'_–ú–µ–Ω—é_', parse_mode='Markdown', reply_markup=menu_kb)


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
